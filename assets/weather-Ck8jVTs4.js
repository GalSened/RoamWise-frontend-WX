var m=Object.defineProperty;var d=(s,t,e)=>t in s?m(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var u=(s,t,e)=>d(s,typeof t!="symbol"?t+"":t,e);import{A as h,t as c}from"./maps-COZuNwZo.js";class w{constructor(t){u(this,"config");u(this,"baseUrl","https://api.openweathermap.org/data/3.0");this.config={units:"metric",language:"en",...t}}async getCurrent(t,e){const a=performance.now();try{const r=new URL("".concat(this.baseUrl,"/onecall"));r.searchParams.set("lat",t.toString()),r.searchParams.set("lon",e.toString()),r.searchParams.set("appid",this.config.apiKey),r.searchParams.set("units",this.config.units),r.searchParams.set("lang",this.config.language),r.searchParams.set("exclude","minutely,hourly,daily,alerts");const n=await fetch(r.toString());if(!n.ok)throw new h("Weather API error: ".concat(n.status),"WEATHER_API_ERROR",n.status);const o=await n.json(),i=this.transformCurrentWeather(o);return c.track("weather_current",{lat:t,lng:e,duration:performance.now()-a,condition:i.condition}),i}catch(r){throw c.track("weather_current_error",{lat:t,lng:e,error:r instanceof Error?r.message:"Unknown error",duration:performance.now()-a}),r}}async getForecast(t,e,a){const r=performance.now();try{const n=new URL("".concat(this.baseUrl,"/onecall"));n.searchParams.set("lat",t.toString()),n.searchParams.set("lon",e.toString()),n.searchParams.set("appid",this.config.apiKey),n.searchParams.set("units",this.config.units),n.searchParams.set("lang",this.config.language),n.searchParams.set("exclude","minutely,alerts");const o=await fetch(n.toString());if(!o.ok)throw new h("Weather API error: ".concat(o.status),"WEATHER_API_ERROR",o.status);const i=await o.json(),p=this.transformForecast(i);return c.track("weather_forecast",{lat:t,lng:e,duration:performance.now()-r,hourly_count:p.hourly.length,daily_count:p.daily.length}),p}catch(n){throw c.track("weather_forecast_error",{lat:t,lng:e,error:n instanceof Error?n.message:"Unknown error",duration:performance.now()-r}),n}}transformCurrentWeather(t){const e=t.current,a=e.weather[0],r=new Date,n=new Date(e.sunrise*1e3),o=new Date(e.sunset*1e3);return{temperature:e.temp,feelsLike:e.feels_like,humidity:e.humidity,pressure:e.pressure,visibility:e.visibility/1e3,windSpeed:e.wind_speed,windDirection:e.wind_deg,precipitation:0,cloudCover:e.clouds.all,uvIndex:e.uvi,condition:a.description,icon:this.transformIcon(a.icon),isDaylight:r>=n&&r<=o}}transformForecast(t){return{hourly:(t.hourly||[]).map(e=>{var a,r;return{time:new Date(e.dt*1e3),temperature:e.temp,precipitation:e.pop*100,windSpeed:e.wind_speed,condition:((a=e.weather[0])==null?void 0:a.description)||"",icon:this.transformIcon(((r=e.weather[0])==null?void 0:r.icon)||"")}}),daily:(t.daily||[]).map(e=>{var a,r;return{date:new Date(e.dt*1e3),temperatureMax:e.temp.max,temperatureMin:e.temp.min,precipitation:0,precipitationProbability:e.pop*100,windSpeed:e.wind_speed,condition:((a=e.weather[0])==null?void 0:a.description)||"",icon:this.transformIcon(((r=e.weather[0])==null?void 0:r.icon)||""),sunrise:new Date(e.sunrise*1e3),sunset:new Date(e.sunset*1e3)}})}}transformIcon(t){return{"01d":"☀️","01n":"🌙","02d":"⛅","02n":"☁️","03d":"☁️","03n":"☁️","04d":"☁️","04n":"☁️","09d":"🌧️","09n":"🌧️","10d":"🌦️","10n":"🌧️","11d":"⛈️","11n":"⛈️","13d":"🌨️","13n":"🌨️","50d":"🌫️","50n":"🌫️"}[t]||"🌤️"}}function g(s){return new w({apiKey:s})}export{g as c};
//# sourceMappingURL=weather-Ck8jVTs4.js.map
