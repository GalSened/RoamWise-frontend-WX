{"version":3,"file":"index-legacy-D64MnHcr.js","sources":["../../src/main.ts"],"sourcesContent":["import './styles/global.css';\n\n// Simple fallback if TypeScript fails\nconsole.log('TypeScript main.ts loading...');\n\n// Try to load the full app, but provide fallback\nlet appInitialized = false;\n\nasync function initializeMainApp() {\n  try {\n    const { initializeApp } = await import('./core/app');\n    const { telemetry } = await import('./lib/telemetry');\n    \n    // Initialize telemetry\n    telemetry.setProperty('app_version', import.meta.env.VITE_APP_VERSION || '2.0.0');\n    telemetry.setProperty('build_env', import.meta.env.MODE);\n    \n    await initializeApp();\n    telemetry.track('app_initialized');\n    appInitialized = true;\n    \n    console.log('✅ Full TypeScript app initialized successfully');\n  } catch (error) {\n    console.error('❌ TypeScript app initialization failed:', error);\n    console.log('🔄 Falling back to simple JavaScript navigation');\n    \n    // The simple-app.js will handle basic functionality\n    if (!appInitialized) {\n      document.dispatchEvent(new CustomEvent('fallback-to-simple-app'));\n    }\n  }\n}\n\n// Initialize the application when DOM is ready\ndocument.addEventListener('DOMContentLoaded', async () => {\n  console.log('🚀 Starting app initialization...');\n  await initializeMainApp();\n});"],"names":["console","log","appInitialized","document","addEventListener","async","initializeApp","__vitePreload","module","import","telemetry","then","n","i","setProperty","track","error","dispatchEvent","CustomEvent","initializeMainApp"],"mappings":"++bAGAA,QAAQC,IAAI,iCAGZ,IAAIC,GAAiB,EA4BrBC,SAASC,iBAAiB,mBAAoBC,UAC5CL,QAAQC,IAAI,2CA3BdI,iBACE,IACE,MAAMC,cAAEA,SAAkBC,EAAAF,UAAA,MAAAC,cAAAA,SAAME,EAAAC,OAAO,4BAAY,MAAA,CAAAH,oBAC7CI,UAAEA,SAAcH,EAAAF,UAAA,MAAAK,UAAAA,SAAMF,EAAAC,OAAO,6BAAiBE,KAAAC,GAAAA,EAAAC,GAAA,MAAA,CAAAH,eAGpDA,EAAUI,YAAY,cAAe,SACrCJ,EAAUI,YAAY,YAAa,oBAE7BR,IACNI,EAAUK,MAAM,mBAChBb,GAAiB,EAEjBF,QAAQC,IAAI,iDACd,OAASe,GACPhB,QAAQgB,MAAM,0CAA2CA,GACzDhB,QAAQC,IAAI,mDAGPC,GACHC,SAASc,cAAc,IAAIC,YAAY,0BAE3C,CACF,CAKQC"}