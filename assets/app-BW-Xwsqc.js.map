{"version":3,"file":"app-BW-Xwsqc.js","sources":["../../src/core/theme/tokens.ts","../../src/lib/utils/events.ts","../../src/core/theme/ThemeProvider.ts","../../src/core/update/UpdateManager.ts","../../src/providers/routing/osrm.ts","../../src/features/routing/WeatherAwareRouter.ts","../../src/core/ai/AIOrchestrator.ts","../../src/lib/storage/index.ts","../../src/features/planning/PlanningManager.ts","../../src/features/voice/VoiceManager.ts","../../src/features/navigation/NavigationManager.ts","../../src/features/map/MapManager.ts","../../src/features/ui/UIManager.ts","../../src/core/app.ts"],"sourcesContent":["import type { ThemeColors } from '@/types';\n\nexport const lightTheme: ThemeColors = {\n  primary: '#0066cc',\n  secondary: '#6366f1',\n  background: '#ffffff',\n  surface: '#f8fafc',\n  text: '#1e293b',\n  textSecondary: '#64748b',\n  border: '#e2e8f0',\n  success: '#10b981',\n  warning: '#f59e0b',\n  error: '#ef4444'\n};\n\nexport const darkTheme: ThemeColors = {\n  primary: '#3b82f6',\n  secondary: '#8b5cf6',\n  background: '#0f172a',\n  surface: '#1e293b',\n  text: '#f1f5f9',\n  textSecondary: '#94a3b8',\n  border: '#334155',\n  success: '#34d399',\n  warning: '#fbbf24',\n  error: '#f87171'\n};\n\nexport const spacing = {\n  xs: '0.25rem',   // 4px\n  sm: '0.5rem',    // 8px\n  md: '1rem',      // 16px\n  lg: '1.5rem',    // 24px\n  xl: '2rem',      // 32px\n  '2xl': '3rem',   // 48px\n  '3xl': '4rem'    // 64px\n};\n\nexport const typography = {\n  fontFamily: {\n    sans: ['Rubik', 'system-ui', 'sans-serif'],\n    mono: ['SF Mono', 'Monaco', 'Cascadia Code', 'monospace']\n  },\n  fontSize: {\n    xs: '0.75rem',\n    sm: '0.875rem',\n    base: '1rem',\n    lg: '1.125rem',\n    xl: '1.25rem',\n    '2xl': '1.5rem',\n    '3xl': '1.875rem',\n    '4xl': '2.25rem'\n  },\n  fontWeight: {\n    normal: '400',\n    medium: '500',\n    semibold: '600',\n    bold: '700'\n  }\n};\n\nexport const borderRadius = {\n  none: '0',\n  sm: '0.125rem',\n  md: '0.375rem',\n  lg: '0.5rem',\n  xl: '0.75rem',\n  '2xl': '1rem',\n  full: '9999px'\n};\n\nexport const shadows = {\n  sm: '0 1px 2px 0 rgb(0 0 0 / 0.05)',\n  md: '0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)',\n  lg: '0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)',\n  xl: '0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)'\n};\n\nexport const zIndex = {\n  dropdown: 1000,\n  sticky: 1020,\n  fixed: 1030,\n  modal: 1040,\n  popover: 1050,\n  tooltip: 1060,\n  toast: 1070\n};\n\nexport const breakpoints = {\n  sm: '640px',\n  md: '768px',\n  lg: '1024px',\n  xl: '1280px',\n  '2xl': '1536px'\n};\n\nexport const animations = {\n  duration: {\n    fast: '150ms',\n    normal: '300ms',\n    slow: '500ms'\n  },\n  easing: {\n    linear: 'linear',\n    ease: 'ease',\n    easeIn: 'ease-in',\n    easeOut: 'ease-out',\n    easeInOut: 'ease-in-out'\n  }\n};","// Event system utilities\n\nexport function createCustomEvent<T = any>(name: string, detail?: T): CustomEvent<T> {\n  return new CustomEvent(name, { detail });\n}\n\nexport class EventBus {\n  private listeners = new Map<string, Set<Function>>();\n\n  on(event: string, callback: Function): void {\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, new Set());\n    }\n    this.listeners.get(event)!.add(callback);\n  }\n\n  off(event: string, callback: Function): void {\n    const eventListeners = this.listeners.get(event);\n    if (eventListeners) {\n      eventListeners.delete(callback);\n      if (eventListeners.size === 0) {\n        this.listeners.delete(event);\n      }\n    }\n  }\n\n  emit(event: string, data?: any): void {\n    const eventListeners = this.listeners.get(event);\n    if (eventListeners) {\n      eventListeners.forEach(callback => {\n        try {\n          callback(data);\n        } catch (error) {\n          console.error(`Error in event listener for ${event}:`, error);\n        }\n      });\n    }\n  }\n\n  once(event: string, callback: Function): void {\n    const wrapper = (...args: any[]) => {\n      this.off(event, wrapper);\n      callback(...args);\n    };\n    this.on(event, wrapper);\n  }\n\n  destroy(): void {\n    this.listeners.clear();\n  }\n}\n\n// Global event bus for cross-component communication\nexport const globalEvents = new EventBus();","import type { Theme, ThemeColors } from '@/types';\nimport { lightTheme, darkTheme } from './tokens';\nimport { createCustomEvent, EventBus } from '@/lib/utils/events';\n\nclass ThemeProvider extends EventBus {\n  private currentTheme: Theme = 'system';\n  private prefersDark = false;\n  private mediaQuery: MediaQueryList;\n\n  constructor() {\n    super();\n    this.mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    this.prefersDark = this.mediaQuery.matches;\n    \n    // Listen for system theme changes\n    this.mediaQuery.addEventListener('change', (e) => {\n      this.prefersDark = e.matches;\n      if (this.currentTheme === 'system') {\n        this.applyTheme();\n        this.emit('theme-changed', { theme: this.getEffectiveTheme() });\n      }\n    });\n\n    // Load saved theme or use system default\n    this.loadTheme();\n    this.applyTheme();\n  }\n\n  private loadTheme(): void {\n    const saved = localStorage.getItem('app-theme') as Theme;\n    if (saved && ['light', 'dark', 'system'].includes(saved)) {\n      this.currentTheme = saved;\n    }\n  }\n\n  private saveTheme(): void {\n    localStorage.setItem('app-theme', this.currentTheme);\n  }\n\n  getTheme(): Theme {\n    return this.currentTheme;\n  }\n\n  getEffectiveTheme(): 'light' | 'dark' {\n    if (this.currentTheme === 'system') {\n      return this.prefersDark ? 'dark' : 'light';\n    }\n    return this.currentTheme;\n  }\n\n  getColors(): ThemeColors {\n    return this.getEffectiveTheme() === 'dark' ? darkTheme : lightTheme;\n  }\n\n  setTheme(theme: Theme): void {\n    if (this.currentTheme === theme) return;\n    \n    this.currentTheme = theme;\n    this.saveTheme();\n    this.applyTheme();\n    this.emit('theme-changed', { theme: this.getEffectiveTheme() });\n  }\n\n  toggleTheme(): void {\n    const current = this.getEffectiveTheme();\n    this.setTheme(current === 'light' ? 'dark' : 'light');\n  }\n\n  private applyTheme(): void {\n    const effective = this.getEffectiveTheme();\n    const colors = this.getColors();\n    \n    // Update CSS custom properties\n    const root = document.documentElement;\n    Object.entries(colors).forEach(([key, value]) => {\n      root.style.setProperty(`--color-${key}`, value);\n    });\n\n    // Update data attribute for CSS targeting\n    root.setAttribute('data-theme', effective);\n    \n    // Update meta theme-color for mobile browsers\n    const themeColorMeta = document.querySelector('meta[name=\"theme-color\"]') as HTMLMetaElement;\n    if (themeColorMeta) {\n      themeColorMeta.content = colors.primary;\n    }\n\n    // Update map style if Leaflet map exists\n    this.updateMapStyle(effective);\n  }\n\n  private updateMapStyle(theme: 'light' | 'dark'): void {\n    // Dispatch event for map to update its basemap\n    window.dispatchEvent(createCustomEvent('map-theme-change', { theme }));\n  }\n\n  // CSS-in-JS helper for components\n  getCSSVariables(): Record<string, string> {\n    const colors = this.getColors();\n    const vars: Record<string, string> = {};\n    \n    Object.entries(colors).forEach(([key, value]) => {\n      vars[`--color-${key}`] = value;\n    });\n    \n    return vars;\n  }\n\n  // Helper for conditional styling\n  isDark(): boolean {\n    return this.getEffectiveTheme() === 'dark';\n  }\n\n  // Get theme-appropriate map tiles URL\n  getMapTileURL(): string {\n    const isDark = this.isDark();\n    \n    if (isDark) {\n      // Use dark tiles from CartoDB or similar\n      return 'https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png';\n    } else {\n      // Use light tiles\n      return 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n    }\n  }\n\n  getMapTileAttribution(): string {\n    const isDark = this.isDark();\n    \n    if (isDark) {\n      return '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>';\n    } else {\n      return '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors';\n    }\n  }\n}\n\n// Global singleton instance\nexport const themeProvider = new ThemeProvider();\n\n// React-like hook interface for easy integration\nexport function useTheme() {\n  return {\n    theme: themeProvider.getTheme(),\n    effectiveTheme: themeProvider.getEffectiveTheme(),\n    colors: themeProvider.getColors(),\n    setTheme: themeProvider.setTheme.bind(themeProvider),\n    toggleTheme: themeProvider.toggleTheme.bind(themeProvider),\n    isDark: themeProvider.isDark(),\n    subscribe: (callback: (theme: string) => void) => {\n      themeProvider.on('theme-changed', callback);\n      return () => themeProvider.off('theme-changed', callback);\n    }\n  };\n}","import type { AppVersion, UpdateInfo } from '@/types';\nimport { EventBus } from '@/lib/utils/events';\nimport { telemetry } from '@/lib/telemetry';\n\ninterface UpdateConfig {\n  checkInterval: number; // milliseconds\n  apiEndpoint: string;\n  currentVersion: string;\n  autoCheck: boolean;\n}\n\nclass UpdateManager extends EventBus {\n  private config: UpdateConfig;\n  private checkTimer?: number;\n  private lastCheckTime = 0;\n  private updateAvailable = false;\n  private latestVersion?: AppVersion;\n\n  constructor(config: Partial<UpdateConfig> = {}) {\n    super();\n    \n    this.config = {\n      checkInterval: 30 * 60 * 1000, // 30 minutes\n      apiEndpoint: '/app/version.json',\n      currentVersion: '2.0.0', // This should come from build process\n      autoCheck: true,\n      ...config\n    };\n\n    if (this.config.autoCheck) {\n      this.startPeriodicCheck();\n    }\n  }\n\n  async checkForUpdates(force = false): Promise<UpdateInfo> {\n    const now = Date.now();\n    \n    // Avoid too frequent checks unless forced\n    if (!force && now - this.lastCheckTime < 5 * 60 * 1000) {\n      return this.getLastUpdateInfo();\n    }\n\n    this.lastCheckTime = now;\n    telemetry.track('update_check_started');\n\n    try {\n      const response = await fetch(this.config.apiEndpoint, {\n        cache: 'no-cache',\n        headers: {\n          'Cache-Control': 'no-cache',\n          'Pragma': 'no-cache'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`Update check failed: ${response.status}`);\n      }\n\n      const latestVersion: AppVersion = await response.json();\n      const updateInfo = this.compareVersions(latestVersion);\n      \n      this.latestVersion = latestVersion;\n      this.updateAvailable = updateInfo.available;\n      \n      if (updateInfo.available) {\n        this.emit('update-available', updateInfo);\n        telemetry.track('update_available', {\n          current: updateInfo.current,\n          latest: updateInfo.latest,\n          urgent: updateInfo.urgent\n        });\n      }\n\n      telemetry.track('update_check_completed', {\n        available: updateInfo.available,\n        version: updateInfo.latest\n      });\n\n      return updateInfo;\n    } catch (error) {\n      console.error('Update check failed:', error);\n      telemetry.track('update_check_failed', {\n        error: error instanceof Error ? error.message : 'Unknown error'\n      });\n      \n      return {\n        available: false,\n        current: this.config.currentVersion,\n        latest: this.config.currentVersion\n      };\n    }\n  }\n\n  private compareVersions(latest: AppVersion): UpdateInfo {\n    const current = this.config.currentVersion;\n    const available = this.isNewerVersion(latest.version, current);\n    \n    return {\n      available,\n      current,\n      latest: latest.version,\n      releaseNotes: available ? latest : undefined,\n      urgent: available && latest.breaking && latest.breaking.length > 0\n    };\n  }\n\n  private isNewerVersion(latest: string, current: string): boolean {\n    const latestParts = latest.split('.').map(Number);\n    const currentParts = current.split('.').map(Number);\n    \n    for (let i = 0; i < Math.max(latestParts.length, currentParts.length); i++) {\n      const latestPart = latestParts[i] || 0;\n      const currentPart = currentParts[i] || 0;\n      \n      if (latestPart > currentPart) return true;\n      if (latestPart < currentPart) return false;\n    }\n    \n    return false;\n  }\n\n  getLastUpdateInfo(): UpdateInfo {\n    return {\n      available: this.updateAvailable,\n      current: this.config.currentVersion,\n      latest: this.latestVersion?.version || this.config.currentVersion,\n      releaseNotes: this.updateAvailable ? this.latestVersion : undefined,\n      urgent: this.updateAvailable && this.latestVersion?.breaking && this.latestVersion.breaking.length > 0\n    };\n  }\n\n  async applyUpdate(): Promise<void> {\n    if (!this.updateAvailable) {\n      throw new Error('No update available');\n    }\n\n    telemetry.track('update_apply_started');\n\n    try {\n      // For PWA, trigger service worker update\n      if ('serviceWorker' in navigator) {\n        const registration = await navigator.serviceWorker.getRegistration();\n        if (registration && registration.waiting) {\n          // There's a waiting service worker, activate it\n          registration.waiting.postMessage({ type: 'SKIP_WAITING' });\n          this.emit('update-applied');\n          telemetry.track('update_applied', { method: 'service_worker' });\n          return;\n        }\n      }\n\n      // For other platforms, redirect to store or reload\n      if (this.isNativeApp()) {\n        this.redirectToStore();\n      } else {\n        // Force reload to get new version\n        window.location.reload();\n      }\n    } catch (error) {\n      console.error('Update application failed:', error);\n      telemetry.track('update_apply_failed', {\n        error: error instanceof Error ? error.message : 'Unknown error'\n      });\n      throw error;\n    }\n  }\n\n  private isNativeApp(): boolean {\n    // Detect if running in native app context\n    return !!(\n      (window as any).ReactNativeWebView ||\n      (window as any).webkit?.messageHandlers ||\n      navigator.userAgent.includes('TravelingApp')\n    );\n  }\n\n  private redirectToStore(): void {\n    const userAgent = navigator.userAgent;\n    \n    if (userAgent.includes('iPhone') || userAgent.includes('iPad')) {\n      // iOS App Store\n      window.open('https://apps.apple.com/app/traveling-app', '_blank');\n    } else if (userAgent.includes('Android')) {\n      // Google Play Store\n      window.open('https://play.google.com/store/apps/details?id=com.traveling.app', '_blank');\n    } else {\n      // Web - just reload\n      window.location.reload();\n    }\n  }\n\n  private startPeriodicCheck(): void {\n    this.checkTimer = window.setInterval(() => {\n      this.checkForUpdates();\n    }, this.config.checkInterval);\n  }\n\n  stopPeriodicCheck(): void {\n    if (this.checkTimer) {\n      clearInterval(this.checkTimer);\n      this.checkTimer = undefined;\n    }\n  }\n\n  destroy(): void {\n    this.stopPeriodicCheck();\n    super.destroy();\n  }\n}\n\n// Service worker message handler for update notifications\nif ('serviceWorker' in navigator) {\n  navigator.serviceWorker.addEventListener('message', (event) => {\n    if (event.data?.type === 'UPDATE_AVAILABLE') {\n      updateManager.emit('update-available', {\n        available: true,\n        current: updateManager.getLastUpdateInfo().current,\n        latest: event.data.version || 'unknown'\n      });\n    }\n  });\n}\n\n// Global singleton\nexport const updateManager = new UpdateManager({\n  currentVersion: import.meta.env.VITE_APP_VERSION || '2.0.0'\n});\n\n// Convenience hook\nexport function useUpdate() {\n  return {\n    checkForUpdates: updateManager.checkForUpdates.bind(updateManager),\n    applyUpdate: updateManager.applyUpdate.bind(updateManager),\n    getUpdateInfo: updateManager.getLastUpdateInfo.bind(updateManager),\n    subscribe: (callback: (updateInfo: UpdateInfo) => void) => {\n      updateManager.on('update-available', callback);\n      return () => updateManager.off('update-available', callback);\n    }\n  };\n}","import type { RoutingProvider, Route, LatLng } from '@/types';\nimport { AppError } from '@/types';\nimport { telemetry } from '@/lib/telemetry';\n\ninterface OSRMConfig {\n  baseUrl?: string;\n  profile?: 'driving' | 'walking' | 'cycling';\n}\n\ninterface OSRMResponse {\n  routes: Array<{\n    legs: Array<{\n      steps: Array<{\n        intersections: Array<{\n          location: [number, number];\n        }>;\n        maneuver: {\n          instruction: string;\n          type: string;\n          location: [number, number];\n        };\n        name: string;\n        duration: number;\n        distance: number;\n        geometry: {\n          coordinates: Array<[number, number]>;\n        };\n      }>;\n      summary: string;\n      duration: number;\n      distance: number;\n    }>;\n    geometry: {\n      coordinates: Array<[number, number]>;\n    };\n    duration: number;\n    distance: number;\n  }>;\n}\n\nexport class OSRMProvider implements RoutingProvider {\n  private config: OSRMConfig;\n\n  constructor(config: OSRMConfig = {}) {\n    this.config = {\n      baseUrl: 'https://router.project-osrm.org',\n      profile: 'driving',\n      ...config\n    };\n  }\n\n  async route(input: {\n    origin: LatLng;\n    destination: LatLng;\n    via?: LatLng[];\n    mode?: 'car' | 'bike' | 'walk';\n    avoidTolls?: boolean;\n    departTime?: Date;\n  }): Promise<Route> {\n    const startTime = performance.now();\n    \n    try {\n      const profile = this.getOSRMProfile(input.mode || 'car');\n      const coordinates = [\n        input.origin,\n        ...(input.via || []),\n        input.destination\n      ];\n\n      const coordString = coordinates\n        .map(coord => `${coord.lng},${coord.lat}`)\n        .join(';');\n\n      const url = new URL(`${this.config.baseUrl}/route/v1/${profile}/${coordString}`);\n      url.searchParams.set('overview', 'full');\n      url.searchParams.set('geometries', 'geojson');\n      url.searchParams.set('steps', 'true');\n      url.searchParams.set('annotations', 'true');\n\n      const response = await fetch(url.toString());\n      \n      if (!response.ok) {\n        throw new AppError(\n          `OSRM API error: ${response.status}`,\n          'OSRM_API_ERROR',\n          response.status\n        );\n      }\n\n      const data: OSRMResponse = await response.json();\n      \n      if (!data.routes || data.routes.length === 0) {\n        throw new AppError('No route found', 'NO_ROUTE_FOUND');\n      }\n\n      const route = this.transformRoute(data.routes[0]);\n      \n      telemetry.track('osrm_route_calculation', {\n        mode: input.mode,\n        has_waypoints: !!(input.via?.length),\n        duration: performance.now() - startTime,\n        distance: route.overview.distance,\n        travel_time: route.overview.duration\n      });\n\n      return route;\n    } catch (error) {\n      telemetry.track('osrm_route_calculation_error', {\n        mode: input.mode,\n        error: error instanceof Error ? error.message : 'Unknown error',\n        duration: performance.now() - startTime\n      });\n      throw error;\n    }\n  }\n\n  private getOSRMProfile(mode: string): string {\n    switch (mode) {\n      case 'walk': return 'foot';\n      case 'bike': return 'cycling';\n      default: return 'driving';\n    }\n  }\n\n  private transformRoute(osrmRoute: OSRMResponse['routes'][0]): Route {\n    return {\n      legs: osrmRoute.legs.map(leg => ({\n        start: {\n          lng: leg.steps[0]?.intersections[0]?.location[0] || 0,\n          lat: leg.steps[0]?.intersections[0]?.location[1] || 0\n        },\n        end: {\n          lng: leg.steps[leg.steps.length - 1]?.intersections[0]?.location[0] || 0,\n          lat: leg.steps[leg.steps.length - 1]?.intersections[0]?.location[1] || 0\n        },\n        duration: leg.duration,\n        distance: leg.distance,\n        steps: leg.steps.map(step => ({\n          instruction: step.maneuver.instruction,\n          duration: step.duration,\n          distance: step.distance,\n          start: {\n            lng: step.maneuver.location[0],\n            lat: step.maneuver.location[1]\n          },\n          end: {\n            lng: step.geometry.coordinates[step.geometry.coordinates.length - 1][0],\n            lat: step.geometry.coordinates[step.geometry.coordinates.length - 1][1]\n          },\n          polyline: this.encodePolyline(step.geometry.coordinates),\n          maneuver: step.maneuver.type\n        })),\n        polyline: this.encodePolyline(\n          leg.steps.flatMap(step => step.geometry.coordinates)\n        )\n      })),\n      overview: {\n        polyline: this.encodePolyline(osrmRoute.geometry.coordinates),\n        bounds: this.calculateBounds(osrmRoute.geometry.coordinates),\n        duration: osrmRoute.duration,\n        distance: osrmRoute.distance\n      },\n      warnings: [],\n      summary: 'OSRM Route'\n    };\n  }\n\n  private calculateBounds(coordinates: Array<[number, number]>) {\n    const lngs = coordinates.map(coord => coord[0]);\n    const lats = coordinates.map(coord => coord[1]);\n    \n    return {\n      north: Math.max(...lats),\n      south: Math.min(...lats),\n      east: Math.max(...lngs),\n      west: Math.min(...lngs)\n    };\n  }\n\n  private encodePolyline(coordinates: Array<[number, number]>): string {\n    // Simple polyline encoding - in production, use a proper library\n    return coordinates\n      .map(coord => `${coord[1]},${coord[0]}`)\n      .join(' ');\n  }\n}\n\n// Factory function\nexport function createOSRMProvider(baseUrl?: string): RoutingProvider {\n  return new OSRMProvider({ baseUrl });\n}","import type { \n  Route, \n  LatLng, \n  RoutingProvider, \n  WeatherProvider, \n  RouteOptions,\n  WeatherData \n} from '@/types';\nimport { EventBus } from '@/lib/utils/events';\nimport { telemetry } from '@/lib/telemetry';\n\ninterface WeatherRouteScore {\n  originalRoute: Route;\n  weatherScore: number;\n  weatherFactors: {\n    precipitation: number; // 0-1 (1 = no rain, 0 = heavy rain)\n    temperature: number;   // 0-1 (1 = comfortable, 0 = extreme)\n    visibility: number;    // 0-1 (1 = clear, 0 = poor visibility)\n    wind: number;         // 0-1 (1 = calm, 0 = dangerous winds)\n    overall: number;      // combined weather fitness score\n  };\n  recommendation: 'proceed' | 'delay' | 'indoor_route' | 'cancel';\n  weatherAlerts: string[];\n  alternativeRoutes?: WeatherRouteScore[];\n}\n\ninterface WeatherRouteOptions extends RouteOptions {\n  weatherAware?: boolean;\n  weatherThreshold?: number; // Minimum weather score to proceed (0-1)\n  includeAlternatives?: boolean;\n  maxAlternatives?: number;\n}\n\nexport class WeatherAwareRouter extends EventBus {\n  private routingProvider: RoutingProvider;\n  private weatherProvider: WeatherProvider;\n  private routeCache = new Map<string, { route: Route; timestamp: number }>();\n  private weatherCache = new Map<string, { data: WeatherData; timestamp: number }>();\n  private cacheTimeout = 5 * 60 * 1000; // 5 minutes\n\n  constructor(routingProvider: RoutingProvider, weatherProvider: WeatherProvider) {\n    super();\n    this.routingProvider = routingProvider;\n    this.weatherProvider = weatherProvider;\n  }\n\n  async calculateWeatherAwareRoute(\n    origin: LatLng,\n    destination: LatLng,\n    options: WeatherRouteOptions = {}\n  ): Promise<WeatherRouteScore> {\n    const startTime = performance.now();\n    \n    try {\n      // Step 1: Get basic route\n      const basicRoute = await this.getBasicRoute(origin, destination, options);\n\n      // Step 2: If weather awareness is disabled, return basic route\n      if (!options.weatherAware) {\n        return {\n          originalRoute: basicRoute,\n          weatherScore: 0.7, // neutral score\n          weatherFactors: this.getNeutralWeatherFactors(),\n          recommendation: 'proceed',\n          weatherAlerts: []\n        };\n      }\n\n      // Step 3: Analyze weather along route\n      const weatherAnalysis = await this.analyzeRouteWeather(basicRoute);\n\n      // Step 4: Score route based on weather\n      const weatherScore = this.calculateWeatherScore(weatherAnalysis);\n\n      // Step 5: Generate recommendations\n      const recommendation = this.generateWeatherRecommendation(weatherScore, options);\n\n      // Step 6: Get alternative routes if needed\n      let alternativeRoutes: WeatherRouteScore[] = [];\n      if (options.includeAlternatives && (weatherScore.overall < 0.6 || options.maxAlternatives)) {\n        alternativeRoutes = await this.generateAlternativeRoutes(\n          origin, \n          destination, \n          basicRoute, \n          options\n        );\n      }\n\n      const result: WeatherRouteScore = {\n        originalRoute: basicRoute,\n        weatherScore: weatherScore.overall,\n        weatherFactors: weatherScore,\n        recommendation,\n        weatherAlerts: this.generateWeatherAlerts(weatherAnalysis, weatherScore),\n        alternativeRoutes\n      };\n\n      telemetry.track('weather_aware_route_calculated', {\n        weather_score: weatherScore.overall,\n        recommendation,\n        has_alternatives: alternativeRoutes.length > 0,\n        duration: performance.now() - startTime\n      });\n\n      this.emit('route-calculated', result);\n      return result;\n\n    } catch (error) {\n      telemetry.track('weather_aware_route_error', {\n        error: error instanceof Error ? error.message : 'Unknown error',\n        duration: performance.now() - startTime\n      });\n      throw error;\n    }\n  }\n\n  private async getBasicRoute(\n    origin: LatLng, \n    destination: LatLng, \n    options: RouteOptions\n  ): Promise<Route> {\n    const cacheKey = `${origin.lat},${origin.lng}-${destination.lat},${destination.lng}-${JSON.stringify(options)}`;\n    const cached = this.routeCache.get(cacheKey);\n    \n    if (cached && Date.now() - cached.timestamp < this.cacheTimeout) {\n      return cached.route;\n    }\n\n    const route = await this.routingProvider.route({ origin, destination, ...options });\n    this.routeCache.set(cacheKey, { route, timestamp: Date.now() });\n    \n    return route;\n  }\n\n  private async analyzeRouteWeather(route: Route): Promise<WeatherData[]> {\n    const weatherPoints = this.extractWeatherCheckpoints(route);\n    const weatherPromises = weatherPoints.map(point => this.getWeatherForPoint(point));\n    \n    return Promise.all(weatherPromises);\n  }\n\n  private extractWeatherCheckpoints(route: Route): LatLng[] {\n    const checkpoints: LatLng[] = [];\n    \n    // Add start and end points\n    if (route.legs.length > 0) {\n      checkpoints.push(route.legs[0].start);\n      checkpoints.push(route.legs[route.legs.length - 1].end);\n    }\n\n    // Add intermediate points (every ~20km or major waypoints)\n    route.legs.forEach(leg => {\n      if (leg.distance > 20000) { // 20km+\n        // Add a midpoint for long legs\n        const midpoint = this.interpolateLatLng(leg.start, leg.end, 0.5);\n        checkpoints.push(midpoint);\n      }\n    });\n\n    return checkpoints;\n  }\n\n  private async getWeatherForPoint(point: LatLng): Promise<WeatherData> {\n    const cacheKey = `${point.lat.toFixed(3)},${point.lng.toFixed(3)}`;\n    const cached = this.weatherCache.get(cacheKey);\n    \n    if (cached && Date.now() - cached.timestamp < this.cacheTimeout) {\n      return cached.data;\n    }\n\n    const weather = await this.weatherProvider.getCurrent(point.lat, point.lng);\n    this.weatherCache.set(cacheKey, { data: weather, timestamp: Date.now() });\n    \n    return weather;\n  }\n\n  private calculateWeatherScore(weatherData: WeatherData[]): WeatherRouteScore['weatherFactors'] {\n    if (weatherData.length === 0) {\n      return this.getNeutralWeatherFactors();\n    }\n\n    // Aggregate weather conditions across all points\n    const avgWeather = this.aggregateWeatherData(weatherData);\n    \n    // Score each weather factor (0-1, higher is better)\n    const precipitation = this.scorePrecipitation(avgWeather.precipitation);\n    const temperature = this.scoreTemperature(avgWeather.temperature);\n    const visibility = this.scoreVisibility(avgWeather.visibility);\n    const wind = this.scoreWind(avgWeather.windSpeed);\n\n    // Calculate overall score with weights\n    const overall = (\n      precipitation * 0.4 +  // Rain is most important for driving\n      temperature * 0.2 +    // Temperature affects comfort\n      visibility * 0.3 +     // Visibility is crucial for safety\n      wind * 0.1            // Wind is least critical for most routes\n    );\n\n    return {\n      precipitation,\n      temperature,\n      visibility,\n      wind,\n      overall\n    };\n  }\n\n  private aggregateWeatherData(weatherData: WeatherData[]): any {\n    const count = weatherData.length;\n    \n    return {\n      temperature: weatherData.reduce((sum, w) => sum + w.temperature, 0) / count,\n      precipitation: Math.max(...weatherData.map(w => w.precipitation || 0)),\n      windSpeed: weatherData.reduce((sum, w) => sum + (w.windSpeed || 0), 0) / count,\n      visibility: Math.min(...weatherData.map(w => w.visibility || 10)) // km\n    };\n  }\n\n  private scorePrecipitation(precipitation: number): number {\n    // precipitation in mm/h\n    if (precipitation <= 0.5) return 1.0;      // No rain\n    if (precipitation <= 2.5) return 0.8;     // Light rain\n    if (precipitation <= 7.5) return 0.5;     // Moderate rain\n    if (precipitation <= 15) return 0.2;      // Heavy rain\n    return 0.0; // Very heavy rain\n  }\n\n  private scoreTemperature(temperature: number): number {\n    // temperature in Celsius - score based on driving comfort\n    if (temperature >= 15 && temperature <= 25) return 1.0; // Ideal\n    if (temperature >= 10 && temperature <= 30) return 0.8; // Good\n    if (temperature >= 5 && temperature <= 35) return 0.6;  // Acceptable\n    if (temperature >= 0 && temperature <= 40) return 0.3;  // Uncomfortable\n    return 0.1; // Extreme temperatures\n  }\n\n  private scoreVisibility(visibility: number): number {\n    // visibility in km\n    if (visibility >= 10) return 1.0;   // Excellent\n    if (visibility >= 5) return 0.8;    // Good\n    if (visibility >= 2) return 0.5;    // Fair\n    if (visibility >= 1) return 0.2;    // Poor\n    return 0.0; // Very poor\n  }\n\n  private scoreWind(windSpeed: number): number {\n    // wind speed in km/h\n    if (windSpeed <= 20) return 1.0;    // Calm to light breeze\n    if (windSpeed <= 40) return 0.8;    // Moderate wind\n    if (windSpeed <= 60) return 0.5;    // Strong wind\n    if (windSpeed <= 80) return 0.2;    // Very strong wind\n    return 0.0; // Dangerous winds\n  }\n\n  private generateWeatherRecommendation(\n    weatherScore: WeatherRouteScore['weatherFactors'],\n    options: WeatherRouteOptions\n  ): WeatherRouteScore['recommendation'] {\n    const threshold = options.weatherThreshold || 0.6;\n    \n    if (weatherScore.overall >= threshold) {\n      return 'proceed';\n    }\n    \n    // Analyze specific issues\n    if (weatherScore.precipitation < 0.3) {\n      return 'delay'; // Heavy rain\n    }\n    \n    if (weatherScore.visibility < 0.3) {\n      return 'delay'; // Poor visibility\n    }\n    \n    if (weatherScore.wind < 0.2) {\n      return 'cancel'; // Dangerous winds\n    }\n    \n    if (weatherScore.overall < 0.3) {\n      return 'cancel'; // Multiple severe issues\n    }\n    \n    return 'indoor_route'; // Try alternatives with more indoor stops\n  }\n\n  private generateWeatherAlerts(\n    weatherData: WeatherData[],\n    weatherScore: WeatherRouteScore['weatherFactors']\n  ): string[] {\n    const alerts: string[] = [];\n    \n    if (weatherScore.precipitation < 0.5) {\n      alerts.push('⚠️ Heavy rain expected along route. Consider delaying travel.');\n    }\n    \n    if (weatherScore.visibility < 0.5) {\n      alerts.push('🌫️ Reduced visibility due to fog or weather conditions.');\n    }\n    \n    if (weatherScore.wind < 0.5) {\n      alerts.push('💨 Strong winds reported. Drive carefully, especially in open areas.');\n    }\n    \n    if (weatherScore.temperature < 0.3) {\n      const avgTemp = weatherData.reduce((sum, w) => sum + w.temperature, 0) / weatherData.length;\n      if (avgTemp < 0) {\n        alerts.push('🧊 Freezing conditions. Watch for ice on roads.');\n      } else if (avgTemp > 35) {\n        alerts.push('🌡️ Extremely hot weather. Ensure vehicle cooling and hydration.');\n      }\n    }\n    \n    return alerts;\n  }\n\n  private async generateAlternativeRoutes(\n    origin: LatLng,\n    destination: LatLng,\n    originalRoute: Route,\n    options: WeatherRouteOptions\n  ): Promise<WeatherRouteScore[]> {\n    const alternatives: WeatherRouteScore[] = [];\n    const maxAlternatives = options.maxAlternatives || 2;\n    \n    // Try different routing preferences\n    const alternativeOptions = [\n      { ...options, routePreference: 'shortest' as const },\n      { ...options, avoidHighways: true },\n      { ...options, avoidTolls: true }\n    ];\n\n    for (const altOptions of alternativeOptions.slice(0, maxAlternatives)) {\n      try {\n        const altRoute = await this.getBasicRoute(origin, destination, altOptions);\n        \n        // Skip if route is too similar to original\n        if (this.routesSimilar(originalRoute, altRoute)) continue;\n        \n        const weatherAnalysis = await this.analyzeRouteWeather(altRoute);\n        const weatherScore = this.calculateWeatherScore(weatherAnalysis);\n        const recommendation = this.generateWeatherRecommendation(weatherScore, options);\n        \n        alternatives.push({\n          originalRoute: altRoute,\n          weatherScore: weatherScore.overall,\n          weatherFactors: weatherScore,\n          recommendation,\n          weatherAlerts: this.generateWeatherAlerts(weatherAnalysis, weatherScore)\n        });\n      } catch (error) {\n        console.warn('Failed to generate alternative route:', error);\n      }\n    }\n    \n    // Sort by weather score (best weather first)\n    return alternatives.sort((a, b) => b.weatherScore - a.weatherScore);\n  }\n\n  private routesSimilar(route1: Route, route2: Route): boolean {\n    // Simple similarity check based on distance and duration\n    const distanceDiff = Math.abs(route1.overview.distance - route2.overview.distance);\n    const durationDiff = Math.abs(route1.overview.duration - route2.overview.duration);\n    \n    return distanceDiff < route1.overview.distance * 0.1 && \n           durationDiff < route1.overview.duration * 0.1;\n  }\n\n  private getNeutralWeatherFactors(): WeatherRouteScore['weatherFactors'] {\n    return {\n      precipitation: 0.7,\n      temperature: 0.7,\n      visibility: 0.7,\n      wind: 0.7,\n      overall: 0.7\n    };\n  }\n\n  private interpolateLatLng(start: LatLng, end: LatLng, ratio: number): LatLng {\n    return {\n      lat: start.lat + (end.lat - start.lat) * ratio,\n      lng: start.lng + (end.lng - start.lng) * ratio\n    };\n  }\n\n  // Public API for real-time weather updates during navigation\n  async updateRouteWeather(route: Route): Promise<WeatherRouteScore['weatherFactors']> {\n    const weatherData = await this.analyzeRouteWeather(route);\n    const weatherScore = this.calculateWeatherScore(weatherData);\n    \n    this.emit('route-weather-updated', weatherScore);\n    return weatherScore;\n  }\n\n  // Get weather forecast for route planning\n  async getRouteForecast(\n    origin: LatLng,\n    destination: LatLng,\n    departureTime: Date\n  ): Promise<{ hourlyWeather: any[]; recommendation: string }> {\n    try {\n      const forecastData = await this.weatherProvider.getForecast(origin.lat, origin.lng);\n      \n      // Find forecast closest to departure time\n      const departureHour = departureTime.getHours();\n      const relevantForecast = forecastData.hourly?.slice(departureHour, departureHour + 6) || [];\n      \n      const weatherScore = this.calculateWeatherScore(relevantForecast);\n      let recommendation = 'Good weather for travel';\n      \n      if (weatherScore.overall < 0.4) {\n        recommendation = 'Consider delaying travel due to poor weather conditions';\n      } else if (weatherScore.overall < 0.6) {\n        recommendation = 'Acceptable weather, drive carefully';\n      }\n      \n      return {\n        hourlyWeather: relevantForecast,\n        recommendation\n      };\n    } catch (error) {\n      console.warn('Failed to get route forecast:', error);\n      return {\n        hourlyWeather: [],\n        recommendation: 'Weather data unavailable'\n      };\n    }\n  }\n\n  clearCache(): void {\n    this.routeCache.clear();\n    this.weatherCache.clear();\n  }\n}\n\n// Factory function\nexport function createWeatherAwareRouter(\n  routingProvider: RoutingProvider,\n  weatherProvider: WeatherProvider\n): WeatherAwareRouter {\n  return new WeatherAwareRouter(routingProvider, weatherProvider);\n}","import type { \n  PlacesProvider, \n  RoutingProvider, \n  WeatherProvider, \n  AIRecommendation,\n  PlanningConstraints,\n  TripPlan,\n  VoiceIntent,\n  LatLng,\n  Place\n} from '@/types';\nimport { AppError } from '@/types';\nimport { EventBus } from '@/lib/utils/events';\nimport { telemetry } from '@/lib/telemetry';\n\ninterface AITool {\n  name: string;\n  description: string;\n  execute(parameters: any): Promise<any>;\n}\n\ninterface PlannerResult {\n  plan: Partial<TripPlan>;\n  reasoning: string;\n  confidence: number;\n  alternatives?: Partial<TripPlan>[];\n}\n\nclass PlannerAgent {\n  constructor(\n    private placesProvider: PlacesProvider,\n    private routingProvider: RoutingProvider,\n    private weatherProvider: WeatherProvider\n  ) {}\n\n  async createPlan(input: {\n    destination?: string;\n    origin?: LatLng;\n    constraints: PlanningConstraints;\n    userPreferences?: Record<string, any>;\n  }): Promise<PlannerResult> {\n    const startTime = performance.now();\n    \n    try {\n      // Step 1: Understand the destination\n      let destinationPlaces: Place[] = [];\n      if (input.destination) {\n        destinationPlaces = await this.placesProvider.search(input.destination, {\n          near: input.origin\n        });\n      }\n\n      // Step 2: Get weather context if weather-aware\n      let weatherContext;\n      if (input.constraints.weatherAware && input.origin) {\n        weatherContext = await this.weatherProvider.getForecast(\n          input.origin.lat,\n          input.origin.lng\n        );\n      }\n\n      // Step 3: Find candidate stops based on constraints\n      const candidates = await this.findCandidateStops(input, weatherContext);\n\n      // Step 4: Score and rank candidates\n      const recommendations = await this.scoreRecommendations(candidates, input, weatherContext);\n\n      // Step 5: Create optimized itinerary\n      const plan = await this.createOptimizedItinerary(recommendations, input);\n\n      telemetry.track('ai_plan_created', {\n        destination: input.destination,\n        candidates_count: candidates.length,\n        recommendations_count: recommendations.length,\n        duration: performance.now() - startTime,\n        weather_aware: input.constraints.weatherAware\n      });\n\n      return {\n        plan,\n        reasoning: this.generatePlanReasoning(plan, recommendations, weatherContext),\n        confidence: this.calculatePlanConfidence(plan, recommendations),\n        alternatives: [] // TODO: Generate alternatives\n      };\n    } catch (error) {\n      telemetry.track('ai_plan_creation_error', {\n        error: error instanceof Error ? error.message : 'Unknown error',\n        duration: performance.now() - startTime\n      });\n      throw error;\n    }\n  }\n\n  private async findCandidateStops(\n    input: any,\n    weatherContext?: any\n  ): Promise<Place[]> {\n    const candidates: Place[] = [];\n    const searchRadius = 10000; // 10km\n\n    if (!input.origin) return candidates;\n\n    // Search for different categories\n    const categories = input.constraints.categories || ['meal', 'scenic', 'activity'];\n    \n    for (const category of categories) {\n      try {\n        const categoryPlaces = await this.placesProvider.search(\n          this.getCategorySearchTerm(category),\n          {\n            near: input.origin,\n            radius: searchRadius,\n            openNow: true\n          }\n        );\n        candidates.push(...categoryPlaces);\n      } catch (error) {\n        console.warn(`Failed to search for ${category}:`, error);\n      }\n    }\n\n    return candidates;\n  }\n\n  private getCategorySearchTerm(category: string): string {\n    const terms = {\n      meal: 'restaurants cafes food',\n      scenic: 'viewpoint scenic attractions parks',\n      activity: 'attractions activities things to do',\n      cultural: 'museums galleries cultural sites',\n      shopping: 'shopping centers markets stores'\n    };\n    return terms[category as keyof typeof terms] || category;\n  }\n\n  private async scoreRecommendations(\n    places: Place[],\n    input: any,\n    weatherContext?: any\n  ): Promise<AIRecommendation[]> {\n    return places.map(place => {\n      const scores = {\n        rating: this.scoreRating(place.rating),\n        distance: this.scoreDistance(place, input.origin),\n        weather: this.scoreWeatherFit(place, weatherContext),\n        openNow: place.openNow ? 1 : 0.3,\n        priceLevel: this.scorePriceLevel(place.priceLevel, input.constraints.budget)\n      };\n\n      const weightedScore = \n        scores.rating * 0.3 +\n        scores.distance * 0.2 +\n        scores.weather * 0.2 +\n        scores.openNow * 0.2 +\n        scores.priceLevel * 0.1;\n\n      return {\n        place,\n        score: weightedScore,\n        reasoning: this.generateRecommendationReasoning(scores, place),\n        category: this.inferCategory(place),\n        estimatedDuration: this.estimateDuration(place),\n        weatherFit: scores.weather,\n        detourTime: 0 // TODO: Calculate actual detour time\n      };\n    }).sort((a, b) => b.score - a.score);\n  }\n\n  private scoreRating(rating?: number): number {\n    if (!rating) return 0.5;\n    return Math.min(rating / 5, 1);\n  }\n\n  private scoreDistance(place: Place, origin?: LatLng): number {\n    if (!origin) return 0.5;\n    \n    const distance = this.calculateDistance(\n      origin,\n      place.location\n    );\n    \n    // Prefer places within 5km, penalize beyond 20km\n    if (distance <= 5000) return 1;\n    if (distance <= 10000) return 0.8;\n    if (distance <= 20000) return 0.5;\n    return 0.2;\n  }\n\n  private scoreWeatherFit(place: Place, weatherContext?: any): number {\n    if (!weatherContext || !place.types) return 0.7;\n\n    const isIndoor = place.types.some(type => \n      ['museum', 'shopping_mall', 'restaurant', 'cafe'].includes(type)\n    );\n    \n    const isOutdoor = place.types.some(type =>\n      ['park', 'tourist_attraction', 'natural_feature'].includes(type)\n    );\n\n    const currentWeather = weatherContext.hourly?.[0];\n    if (!currentWeather) return 0.7;\n\n    // If it's raining, prefer indoor activities\n    if (currentWeather.precipitation > 5) {\n      return isIndoor ? 1 : 0.3;\n    }\n\n    // If it's very hot, prefer indoor or shaded activities\n    if (currentWeather.temperature > 30) {\n      return isIndoor ? 0.9 : 0.6;\n    }\n\n    // Good weather, prefer outdoor activities\n    if (currentWeather.temperature > 15 && currentWeather.precipitation < 1) {\n      return isOutdoor ? 1 : 0.7;\n    }\n\n    return 0.7;\n  }\n\n  private scorePriceLevel(priceLevel?: number, budget?: { min: number; max: number }): number {\n    if (!priceLevel || !budget) return 0.7;\n\n    // Google Places price levels: 0 (free) to 4 (very expensive)\n    const estimatedCost = priceLevel * 50; // Rough estimate\n    \n    if (estimatedCost >= budget.min && estimatedCost <= budget.max) return 1;\n    if (estimatedCost < budget.min) return 0.8; // Cheaper is usually okay\n    if (estimatedCost > budget.max * 1.5) return 0.2; // Way over budget\n    return 0.5; // Slightly over budget\n  }\n\n  private generateRecommendationReasoning(scores: any, place: Place): string {\n    const reasons = [];\n    \n    if (scores.rating > 0.8) reasons.push('highly rated');\n    if (scores.distance > 0.8) reasons.push('nearby');\n    if (scores.weather > 0.8) reasons.push('perfect for current weather');\n    if (scores.openNow === 1) reasons.push('open now');\n    \n    return reasons.length > 0 \n      ? `Great choice: ${reasons.join(', ')}`\n      : 'Good option for your trip';\n  }\n\n  private inferCategory(place: Place): any {\n    if (!place.types) return 'other';\n    \n    if (place.types.includes('restaurant') || place.types.includes('cafe')) return 'meal';\n    if (place.types.includes('tourist_attraction')) return 'scenic';\n    if (place.types.includes('museum')) return 'cultural';\n    if (place.types.includes('shopping_mall')) return 'shopping';\n    \n    return 'activity';\n  }\n\n  private estimateDuration(place: Place): number {\n    const category = this.inferCategory(place);\n    const durations = {\n      meal: 90,\n      scenic: 60,\n      cultural: 120,\n      shopping: 180,\n      activity: 120,\n      other: 60\n    };\n    return durations[category as keyof typeof durations] || 60;\n  }\n\n  private async createOptimizedItinerary(\n    recommendations: AIRecommendation[],\n    input: any\n  ): Promise<Partial<TripPlan>> {\n    const maxStops = Math.min(recommendations.length, 8); // Reasonable limit\n    const selectedStops = recommendations.slice(0, maxStops);\n\n    return {\n      name: input.destination ? `Trip to ${input.destination}` : 'Custom Trip',\n      description: 'AI-generated trip plan based on your preferences',\n      stops: selectedStops.map((rec, index) => ({\n        id: `stop-${index}`,\n        place: rec.place,\n        category: rec.category,\n        priority: Math.max(1, Math.ceil(rec.score * 5)),\n        duration: rec.estimatedDuration,\n        weatherDependent: rec.weatherFit < 0.5,\n        notes: rec.reasoning\n      }))\n    };\n  }\n\n  private generatePlanReasoning(plan: any, recommendations: AIRecommendation[], weatherContext?: any): string {\n    const reasons = [\n      `Selected ${plan.stops?.length || 0} stops based on ratings, proximity, and your preferences.`\n    ];\n\n    if (weatherContext) {\n      const currentWeather = weatherContext.hourly?.[0];\n      if (currentWeather?.precipitation > 5) {\n        reasons.push('Prioritized indoor activities due to rain forecast.');\n      } else if (currentWeather?.temperature > 25) {\n        reasons.push('Balanced indoor and outdoor activities for comfort in warm weather.');\n      }\n    }\n\n    const highRatedCount = recommendations.filter(r => r.score > 0.8).length;\n    if (highRatedCount > 0) {\n      reasons.push(`Included ${highRatedCount} highly-rated recommendations.`);\n    }\n\n    return reasons.join(' ');\n  }\n\n  private calculatePlanConfidence(plan: any, recommendations: AIRecommendation[]): number {\n    if (!recommendations.length) return 0;\n    \n    const avgScore = recommendations.reduce((sum, rec) => sum + rec.score, 0) / recommendations.length;\n    const hasHighQuality = recommendations.some(rec => rec.score > 0.8);\n    \n    return Math.min(avgScore + (hasHighQuality ? 0.2 : 0), 1);\n  }\n\n  private calculateDistance(from: LatLng, to: LatLng): number {\n    const R = 6371e3; // Earth's radius in meters\n    const φ1 = from.lat * Math.PI / 180;\n    const φ2 = to.lat * Math.PI / 180;\n    const Δφ = (to.lat - from.lat) * Math.PI / 180;\n    const Δλ = (to.lng - from.lng) * Math.PI / 180;\n\n    const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\n              Math.cos(φ1) * Math.cos(φ2) *\n              Math.sin(Δλ/2) * Math.sin(Δλ/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n\n    return R * c;\n  }\n}\n\nclass AIOrchestrator extends EventBus {\n  private plannerAgent: PlannerAgent;\n  private tools = new Map<string, AITool>();\n\n  constructor(\n    private placesProvider: PlacesProvider,\n    private routingProvider: RoutingProvider,\n    private weatherProvider: WeatherProvider\n  ) {\n    super();\n    this.plannerAgent = new PlannerAgent(placesProvider, routingProvider, weatherProvider);\n    this.initializeTools();\n  }\n\n  private initializeTools(): void {\n    // Search Tool\n    this.registerTool({\n      name: 'search_places',\n      description: 'Search for places near a location',\n      execute: async (params: { query: string; location?: LatLng }) => {\n        return this.placesProvider.search(params.query, {\n          near: params.location\n        });\n      }\n    });\n\n    // Route Tool\n    this.registerTool({\n      name: 'calculate_route',\n      description: 'Calculate route between locations',\n      execute: async (params: { origin: LatLng; destination: LatLng }) => {\n        return this.routingProvider.route(params);\n      }\n    });\n\n    // Weather Tool\n    this.registerTool({\n      name: 'get_weather',\n      description: 'Get weather information for a location',\n      execute: async (params: { location: LatLng; forecast?: boolean }) => {\n        if (params.forecast) {\n          return this.weatherProvider.getForecast(params.location.lat, params.location.lng);\n        } else {\n          return this.weatherProvider.getCurrent(params.location.lat, params.location.lng);\n        }\n      }\n    });\n  }\n\n  registerTool(tool: AITool): void {\n    this.tools.set(tool.name, tool);\n  }\n\n  async processVoiceIntent(intent: VoiceIntent, context?: any): Promise<any> {\n    telemetry.track('ai_voice_intent_processed', {\n      intent_type: intent.type,\n      confidence: intent.confidence\n    });\n\n    switch (intent.type) {\n      case 'plan_create':\n        return this.handlePlanCreate(intent, context);\n      case 'plan_update':\n        return this.handlePlanUpdate(intent, context);\n      case 'search':\n        return this.handleSearch(intent, context);\n      case 'navigate':\n        return this.handleNavigate(intent, context);\n      case 'weather':\n        return this.handleWeather(intent, context);\n      default:\n        throw new AppError(`Unsupported intent type: ${intent.type}`, 'UNSUPPORTED_INTENT');\n    }\n  }\n\n  private async handlePlanCreate(intent: VoiceIntent, context?: any): Promise<PlannerResult> {\n    const destination = intent.parameters.destination;\n    const constraints: PlanningConstraints = {\n      weatherAware: true,\n      maxDrivingTime: 8 * 60, // 8 hours\n      ...context?.constraints\n    };\n\n    return this.plannerAgent.createPlan({\n      destination,\n      origin: context?.location,\n      constraints,\n      userPreferences: context?.userPreferences\n    });\n  }\n\n  private async handlePlanUpdate(intent: VoiceIntent, context?: any): Promise<any> {\n    // TODO: Implement plan update logic\n    return { action: 'plan_update', parameters: intent.parameters };\n  }\n\n  private async handleSearch(intent: VoiceIntent, context?: any): Promise<Place[]> {\n    const query = intent.parameters.query;\n    const location = context?.location;\n\n    const tool = this.tools.get('search_places');\n    if (!tool) throw new AppError('Search tool not available', 'TOOL_NOT_FOUND');\n\n    return tool.execute({ query, location });\n  }\n\n  private async handleNavigate(intent: VoiceIntent, context?: any): Promise<any> {\n    // TODO: Implement navigation logic\n    return { action: 'navigate', parameters: intent.parameters };\n  }\n\n  private async handleWeather(intent: VoiceIntent, context?: any): Promise<any> {\n    const location = context?.location;\n    if (!location) {\n      throw new AppError('Location required for weather information', 'LOCATION_REQUIRED');\n    }\n\n    const tool = this.tools.get('get_weather');\n    if (!tool) throw new AppError('Weather tool not available', 'TOOL_NOT_FOUND');\n\n    return tool.execute({ location, forecast: true });\n  }\n\n  async explainRecommendation(recommendation: AIRecommendation): Promise<string> {\n    const reasons = [\n      `This place has a score of ${(recommendation.score * 100).toFixed(0)}% based on multiple factors:`\n    ];\n\n    if (recommendation.place.rating && recommendation.place.rating > 4) {\n      reasons.push(`• Highly rated (${recommendation.place.rating}⭐) by ${recommendation.place.userRatingsTotal || 'many'} visitors`);\n    }\n\n    if (recommendation.weatherFit > 0.8) {\n      reasons.push('• Perfect for current weather conditions');\n    } else if (recommendation.weatherFit < 0.4) {\n      reasons.push('• Consider weather conditions when visiting');\n    }\n\n    if (recommendation.detourTime < 10) {\n      reasons.push('• Very close to your route (minimal detour)');\n    }\n\n    reasons.push(`• Estimated visit duration: ${recommendation.estimatedDuration} minutes`);\n    reasons.push(`• Category: ${recommendation.category}`);\n\n    return reasons.join('\\n');\n  }\n}\n\n// Factory function to create AI orchestrator\nexport function createAIOrchestrator(\n  placesProvider: PlacesProvider,\n  routingProvider: RoutingProvider,\n  weatherProvider: WeatherProvider\n): AIOrchestrator {\n  return new AIOrchestrator(placesProvider, routingProvider, weatherProvider);\n}","// Storage abstraction layer supporting localStorage, IndexedDB, and memory fallback\n\ninterface StorageAdapter {\n  get(key: string): Promise<any>;\n  set(key: string, value: any): Promise<void>;\n  remove(key: string): Promise<void>;\n  clear(): Promise<void>;\n  keys(): Promise<string[]>;\n}\n\nclass LocalStorageAdapter implements StorageAdapter {\n  async get(key: string): Promise<any> {\n    try {\n      const item = localStorage.getItem(key);\n      return item ? JSON.parse(item) : null;\n    } catch (error) {\n      console.warn(`Failed to get ${key} from localStorage:`, error);\n      return null;\n    }\n  }\n\n  async set(key: string, value: any): Promise<void> {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.warn(`Failed to set ${key} in localStorage:`, error);\n      throw error;\n    }\n  }\n\n  async remove(key: string): Promise<void> {\n    try {\n      localStorage.removeItem(key);\n    } catch (error) {\n      console.warn(`Failed to remove ${key} from localStorage:`, error);\n    }\n  }\n\n  async clear(): Promise<void> {\n    try {\n      localStorage.clear();\n    } catch (error) {\n      console.warn('Failed to clear localStorage:', error);\n    }\n  }\n\n  async keys(): Promise<string[]> {\n    try {\n      return Object.keys(localStorage);\n    } catch (error) {\n      console.warn('Failed to get localStorage keys:', error);\n      return [];\n    }\n  }\n}\n\nclass IndexedDBAdapter implements StorageAdapter {\n  private dbName = 'TravelingAppDB';\n  private version = 1;\n  private storeName = 'keyvalue';\n  private db?: IDBDatabase;\n\n  private async getDB(): Promise<IDBDatabase> {\n    if (this.db) return this.db;\n\n    return new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.dbName, this.version);\n\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => {\n        this.db = request.result;\n        resolve(this.db);\n      };\n\n      request.onupgradeneeded = (event) => {\n        const db = (event.target as IDBOpenDBRequest).result;\n        if (!db.objectStoreNames.contains(this.storeName)) {\n          db.createObjectStore(this.storeName);\n        }\n      };\n    });\n  }\n\n  async get(key: string): Promise<any> {\n    try {\n      const db = await this.getDB();\n      return new Promise((resolve, reject) => {\n        const transaction = db.transaction([this.storeName], 'readonly');\n        const store = transaction.objectStore(this.storeName);\n        const request = store.get(key);\n\n        request.onerror = () => reject(request.error);\n        request.onsuccess = () => resolve(request.result);\n      });\n    } catch (error) {\n      console.warn(`Failed to get ${key} from IndexedDB:`, error);\n      return null;\n    }\n  }\n\n  async set(key: string, value: any): Promise<void> {\n    try {\n      const db = await this.getDB();\n      return new Promise((resolve, reject) => {\n        const transaction = db.transaction([this.storeName], 'readwrite');\n        const store = transaction.objectStore(this.storeName);\n        const request = store.put(value, key);\n\n        request.onerror = () => reject(request.error);\n        request.onsuccess = () => resolve();\n      });\n    } catch (error) {\n      console.warn(`Failed to set ${key} in IndexedDB:`, error);\n      throw error;\n    }\n  }\n\n  async remove(key: string): Promise<void> {\n    try {\n      const db = await this.getDB();\n      return new Promise((resolve, reject) => {\n        const transaction = db.transaction([this.storeName], 'readwrite');\n        const store = transaction.objectStore(this.storeName);\n        const request = store.delete(key);\n\n        request.onerror = () => reject(request.error);\n        request.onsuccess = () => resolve();\n      });\n    } catch (error) {\n      console.warn(`Failed to remove ${key} from IndexedDB:`, error);\n    }\n  }\n\n  async clear(): Promise<void> {\n    try {\n      const db = await this.getDB();\n      return new Promise((resolve, reject) => {\n        const transaction = db.transaction([this.storeName], 'readwrite');\n        const store = transaction.objectStore(this.storeName);\n        const request = store.clear();\n\n        request.onerror = () => reject(request.error);\n        request.onsuccess = () => resolve();\n      });\n    } catch (error) {\n      console.warn('Failed to clear IndexedDB:', error);\n    }\n  }\n\n  async keys(): Promise<string[]> {\n    try {\n      const db = await this.getDB();\n      return new Promise((resolve, reject) => {\n        const transaction = db.transaction([this.storeName], 'readonly');\n        const store = transaction.objectStore(this.storeName);\n        const request = store.getAllKeys();\n\n        request.onerror = () => reject(request.error);\n        request.onsuccess = () => resolve(request.result as string[]);\n      });\n    } catch (error) {\n      console.warn('Failed to get IndexedDB keys:', error);\n      return [];\n    }\n  }\n}\n\nclass MemoryAdapter implements StorageAdapter {\n  private data = new Map<string, any>();\n\n  async get(key: string): Promise<any> {\n    return this.data.get(key) || null;\n  }\n\n  async set(key: string, value: any): Promise<void> {\n    this.data.set(key, value);\n  }\n\n  async remove(key: string): Promise<void> {\n    this.data.delete(key);\n  }\n\n  async clear(): Promise<void> {\n    this.data.clear();\n  }\n\n  async keys(): Promise<string[]> {\n    return Array.from(this.data.keys());\n  }\n}\n\nclass StorageManager {\n  private adapter: StorageAdapter;\n\n  constructor() {\n    this.adapter = this.createAdapter();\n  }\n\n  private createAdapter(): StorageAdapter {\n    // Try IndexedDB first for large data\n    if (typeof indexedDB !== 'undefined') {\n      try {\n        return new IndexedDBAdapter();\n      } catch (error) {\n        console.warn('IndexedDB not available, falling back to localStorage');\n      }\n    }\n\n    // Fallback to localStorage\n    if (typeof localStorage !== 'undefined') {\n      try {\n        // Test localStorage availability\n        localStorage.setItem('__test__', 'test');\n        localStorage.removeItem('__test__');\n        return new LocalStorageAdapter();\n      } catch (error) {\n        console.warn('localStorage not available, falling back to memory storage');\n      }\n    }\n\n    // Final fallback to memory storage\n    return new MemoryAdapter();\n  }\n\n  async get(key: string): Promise<any> {\n    return this.adapter.get(key);\n  }\n\n  async set(key: string, value: any): Promise<void> {\n    return this.adapter.set(key, value);\n  }\n\n  async remove(key: string): Promise<void> {\n    return this.adapter.remove(key);\n  }\n\n  async clear(): Promise<void> {\n    return this.adapter.clear();\n  }\n\n  async keys(): Promise<string[]> {\n    return this.adapter.keys();\n  }\n\n  // Convenience methods\n  async getNumber(key: string, defaultValue = 0): Promise<number> {\n    const value = await this.get(key);\n    return typeof value === 'number' ? value : defaultValue;\n  }\n\n  async getString(key: string, defaultValue = ''): Promise<string> {\n    const value = await this.get(key);\n    return typeof value === 'string' ? value : defaultValue;\n  }\n\n  async getBoolean(key: string, defaultValue = false): Promise<boolean> {\n    const value = await this.get(key);\n    return typeof value === 'boolean' ? value : defaultValue;\n  }\n\n  async getArray<T>(key: string, defaultValue: T[] = []): Promise<T[]> {\n    const value = await this.get(key);\n    return Array.isArray(value) ? value : defaultValue;\n  }\n\n  async getObject<T>(key: string, defaultValue: T | null = null): Promise<T | null> {\n    const value = await this.get(key);\n    return value && typeof value === 'object' ? value : defaultValue;\n  }\n\n  // Batch operations\n  async setMany(items: Record<string, any>): Promise<void> {\n    await Promise.all(\n      Object.entries(items).map(([key, value]) => this.set(key, value))\n    );\n  }\n\n  async getMany(keys: string[]): Promise<Record<string, any>> {\n    const results = await Promise.all(\n      keys.map(async key => ({ key, value: await this.get(key) }))\n    );\n    \n    return results.reduce((acc, { key, value }) => {\n      acc[key] = value;\n      return acc;\n    }, {} as Record<string, any>);\n  }\n\n  // Cache with TTL\n  async setWithTTL(key: string, value: any, ttlMs: number): Promise<void> {\n    const expiry = Date.now() + ttlMs;\n    await this.set(key, { value, expiry });\n  }\n\n  async getWithTTL(key: string): Promise<any> {\n    const item = await this.get(key);\n    if (!item || typeof item !== 'object' || !item.expiry) {\n      return null;\n    }\n\n    if (Date.now() > item.expiry) {\n      await this.remove(key);\n      return null;\n    }\n\n    return item.value;\n  }\n}\n\n// Global storage instance\nexport const storage = new StorageManager();","import type { \n  TripPlan, \n  TripStop, \n  PlanningConstraints, \n  LatLng, \n  StopCategory,\n  Place \n} from '@/types';\nimport { AppError } from '@/types';\nimport { EventBus } from '@/lib/utils/events';\nimport { telemetry } from '@/lib/telemetry';\nimport { storage } from '@/lib/storage';\n\ninterface PlanValidationResult {\n  valid: boolean;\n  errors: string[];\n  warnings: string[];\n}\n\nclass PlanningManager extends EventBus {\n  private currentPlan?: TripPlan;\n  private plans = new Map<string, TripPlan>();\n\n  constructor() {\n    super();\n    this.loadPlans();\n  }\n\n  async createPlan(\n    name: string,\n    description?: string,\n    startDate?: Date,\n    endDate?: Date\n  ): Promise<TripPlan> {\n    const plan: TripPlan = {\n      id: this.generateId(),\n      name,\n      description,\n      startDate: startDate || new Date(),\n      endDate: endDate || new Date(Date.now() + 24 * 60 * 60 * 1000), // Default: 1 day\n      stops: [],\n      metadata: {\n        created: new Date(),\n        updated: new Date(),\n        version: 1\n      }\n    };\n\n    this.plans.set(plan.id, plan);\n    this.currentPlan = plan;\n    await this.savePlans();\n\n    telemetry.track('trip_plan_created', {\n      plan_id: plan.id,\n      has_description: !!description,\n      duration_days: Math.ceil((plan.endDate.getTime() - plan.startDate.getTime()) / (24 * 60 * 60 * 1000))\n    });\n\n    this.emit('plan-created', plan);\n    return plan;\n  }\n\n  async updatePlan(planId: string, updates: Partial<TripPlan>): Promise<TripPlan> {\n    const plan = this.plans.get(planId);\n    if (!plan) {\n      throw new AppError('Trip plan not found', 'PLAN_NOT_FOUND');\n    }\n\n    const updatedPlan: TripPlan = {\n      ...plan,\n      ...updates,\n      id: plan.id, // Ensure ID cannot be changed\n      metadata: {\n        ...plan.metadata,\n        updated: new Date(),\n        version: plan.metadata.version + 1\n      }\n    };\n\n    // Validate the updated plan\n    const validation = this.validatePlan(updatedPlan);\n    if (!validation.valid) {\n      throw new AppError(\n        `Plan validation failed: ${validation.errors.join(', ')}`,\n        'PLAN_VALIDATION_FAILED'\n      );\n    }\n\n    this.plans.set(planId, updatedPlan);\n    if (this.currentPlan?.id === planId) {\n      this.currentPlan = updatedPlan;\n    }\n    await this.savePlans();\n\n    telemetry.track('trip_plan_updated', {\n      plan_id: planId,\n      stops_count: updatedPlan.stops.length,\n      has_route: !!updatedPlan.route\n    });\n\n    this.emit('plan-updated', updatedPlan);\n    return updatedPlan;\n  }\n\n  async deletePlan(planId: string): Promise<void> {\n    const plan = this.plans.get(planId);\n    if (!plan) {\n      throw new AppError('Trip plan not found', 'PLAN_NOT_FOUND');\n    }\n\n    this.plans.delete(planId);\n    if (this.currentPlan?.id === planId) {\n      this.currentPlan = undefined;\n    }\n    await this.savePlans();\n\n    telemetry.track('trip_plan_deleted', { plan_id: planId });\n    this.emit('plan-deleted', planId);\n  }\n\n  async addStop(\n    planId: string,\n    place: Place,\n    options: {\n      category: StopCategory;\n      priority?: number;\n      arrivalTime?: Date;\n      departureTime?: Date;\n      duration?: number;\n      notes?: string;\n      weatherDependent?: boolean;\n      insertIndex?: number;\n    }\n  ): Promise<TripStop> {\n    const plan = this.plans.get(planId);\n    if (!plan) {\n      throw new AppError('Trip plan not found', 'PLAN_NOT_FOUND');\n    }\n\n    const stop: TripStop = {\n      id: this.generateId(),\n      place,\n      category: options.category,\n      priority: options.priority || 3,\n      arrivalTime: options.arrivalTime,\n      departureTime: options.departureTime,\n      duration: options.duration,\n      notes: options.notes,\n      weatherDependent: options.weatherDependent || false\n    };\n\n    // Insert at specified index or append\n    if (options.insertIndex !== undefined && options.insertIndex >= 0) {\n      plan.stops.splice(options.insertIndex, 0, stop);\n    } else {\n      plan.stops.push(stop);\n    }\n\n    await this.updatePlan(planId, { stops: plan.stops });\n\n    telemetry.track('trip_stop_added', {\n      plan_id: planId,\n      stop_id: stop.id,\n      category: stop.category,\n      has_timing: !!(stop.arrivalTime || stop.departureTime),\n      weather_dependent: stop.weatherDependent\n    });\n\n    this.emit('stop-added', { planId, stop });\n    return stop;\n  }\n\n  async updateStop(\n    planId: string,\n    stopId: string,\n    updates: Partial<TripStop>\n  ): Promise<TripStop> {\n    const plan = this.plans.get(planId);\n    if (!plan) {\n      throw new AppError('Trip plan not found', 'PLAN_NOT_FOUND');\n    }\n\n    const stopIndex = plan.stops.findIndex(s => s.id === stopId);\n    if (stopIndex === -1) {\n      throw new AppError('Stop not found', 'STOP_NOT_FOUND');\n    }\n\n    const updatedStop: TripStop = {\n      ...plan.stops[stopIndex],\n      ...updates,\n      id: stopId // Ensure ID cannot be changed\n    };\n\n    plan.stops[stopIndex] = updatedStop;\n    await this.updatePlan(planId, { stops: plan.stops });\n\n    telemetry.track('trip_stop_updated', {\n      plan_id: planId,\n      stop_id: stopId\n    });\n\n    this.emit('stop-updated', { planId, stop: updatedStop });\n    return updatedStop;\n  }\n\n  async removeStop(planId: string, stopId: string): Promise<void> {\n    const plan = this.plans.get(planId);\n    if (!plan) {\n      throw new AppError('Trip plan not found', 'PLAN_NOT_FOUND');\n    }\n\n    const stopIndex = plan.stops.findIndex(s => s.id === stopId);\n    if (stopIndex === -1) {\n      throw new AppError('Stop not found', 'STOP_NOT_FOUND');\n    }\n\n    plan.stops.splice(stopIndex, 1);\n    await this.updatePlan(planId, { stops: plan.stops });\n\n    telemetry.track('trip_stop_removed', {\n      plan_id: planId,\n      stop_id: stopId\n    });\n\n    this.emit('stop-removed', { planId, stopId });\n  }\n\n  async reorderStops(planId: string, fromIndex: number, toIndex: number): Promise<void> {\n    const plan = this.plans.get(planId);\n    if (!plan) {\n      throw new AppError('Trip plan not found', 'PLAN_NOT_FOUND');\n    }\n\n    if (fromIndex < 0 || fromIndex >= plan.stops.length ||\n        toIndex < 0 || toIndex >= plan.stops.length) {\n      throw new AppError('Invalid stop indices', 'INVALID_INDICES');\n    }\n\n    const [movedStop] = plan.stops.splice(fromIndex, 1);\n    plan.stops.splice(toIndex, 0, movedStop);\n\n    await this.updatePlan(planId, { stops: plan.stops });\n\n    telemetry.track('trip_stops_reordered', {\n      plan_id: planId,\n      from_index: fromIndex,\n      to_index: toIndex\n    });\n\n    this.emit('stops-reordered', { planId, fromIndex, toIndex });\n  }\n\n  validatePlan(plan: TripPlan): PlanValidationResult {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    // Basic validation\n    if (!plan.name.trim()) {\n      errors.push('Plan name is required');\n    }\n\n    if (plan.endDate <= plan.startDate) {\n      errors.push('End date must be after start date');\n    }\n\n    // Stop validation\n    for (let i = 0; i < plan.stops.length; i++) {\n      const stop = plan.stops[i];\n      const stopPrefix = `Stop ${i + 1}`;\n\n      if (!stop.place.name) {\n        errors.push(`${stopPrefix}: Place name is required`);\n      }\n\n      if (!stop.place.location.lat || !stop.place.location.lng) {\n        errors.push(`${stopPrefix}: Valid location coordinates are required`);\n      }\n\n      // Time validation\n      if (stop.arrivalTime && stop.departureTime) {\n        if (stop.departureTime <= stop.arrivalTime) {\n          errors.push(`${stopPrefix}: Departure time must be after arrival time`);\n        }\n\n        const actualDuration = stop.departureTime.getTime() - stop.arrivalTime.getTime();\n        const expectedDuration = (stop.duration || 60) * 60 * 1000; // Convert minutes to ms\n\n        if (Math.abs(actualDuration - expectedDuration) > 30 * 60 * 1000) { // 30 min tolerance\n          warnings.push(`${stopPrefix}: Duration mismatch between times and specified duration`);\n        }\n      }\n\n      // Check for overlapping times with next stop\n      if (i < plan.stops.length - 1) {\n        const nextStop = plan.stops[i + 1];\n        if (stop.departureTime && nextStop.arrivalTime) {\n          if (stop.departureTime > nextStop.arrivalTime) {\n            errors.push(`${stopPrefix}: Departure time overlaps with next stop's arrival time`);\n          }\n        }\n      }\n\n      // Realistic duration validation\n      if (stop.duration) {\n        const maxDurations: Record<StopCategory, number> = {\n          meal: 180,        // 3 hours max\n          scenic: 120,      // 2 hours max\n          activity: 480,    // 8 hours max\n          accommodation: 720, // 12 hours max (half day)\n          fuel: 30,         // 30 minutes max\n          shopping: 240,    // 4 hours max\n          cultural: 360,    // 6 hours max\n          other: 480        // 8 hours max\n        };\n\n        const maxDuration = maxDurations[stop.category];\n        if (stop.duration > maxDuration) {\n          warnings.push(`${stopPrefix}: Duration (${stop.duration} min) seems unusually long for ${stop.category}`);\n        }\n\n        if (stop.duration < 5 && stop.category !== 'fuel') {\n          warnings.push(`${stopPrefix}: Duration (${stop.duration} min) seems too short`);\n        }\n      }\n    }\n\n    // Check total trip duration\n    const totalDays = Math.ceil((plan.endDate.getTime() - plan.startDate.getTime()) / (24 * 60 * 60 * 1000));\n    if (totalDays > 30) {\n      warnings.push('Trip duration is very long (> 30 days)');\n    }\n\n    // Check for reasonable number of stops per day\n    const stopsPerDay = plan.stops.length / totalDays;\n    if (stopsPerDay > 10) {\n      warnings.push('Very high number of stops per day - consider reducing for a more relaxed trip');\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors,\n      warnings\n    };\n  }\n\n  optimizeStopOrder(planId: string, constraints?: PlanningConstraints): Promise<TripPlan> {\n    // This would implement a traveling salesman problem solver\n    // For now, return a simple implementation\n    return Promise.resolve(this.plans.get(planId)!);\n  }\n\n  getPlan(planId: string): TripPlan | undefined {\n    return this.plans.get(planId);\n  }\n\n  getCurrentPlan(): TripPlan | undefined {\n    return this.currentPlan;\n  }\n\n  getAllPlans(): TripPlan[] {\n    return Array.from(this.plans.values()).sort(\n      (a, b) => b.metadata.updated.getTime() - a.metadata.updated.getTime()\n    );\n  }\n\n  setCurrentPlan(planId: string): void {\n    const plan = this.plans.get(planId);\n    if (plan) {\n      this.currentPlan = plan;\n      this.emit('current-plan-changed', plan);\n    }\n  }\n\n  private generateId(): string {\n    return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private async loadPlans(): Promise<void> {\n    try {\n      const saved = await storage.get('trip-plans') as TripPlan[] || [];\n      saved.forEach(plan => {\n        // Deserialize dates\n        plan.startDate = new Date(plan.startDate);\n        plan.endDate = new Date(plan.endDate);\n        plan.metadata.created = new Date(plan.metadata.created);\n        plan.metadata.updated = new Date(plan.metadata.updated);\n        \n        plan.stops.forEach(stop => {\n          if (stop.arrivalTime) stop.arrivalTime = new Date(stop.arrivalTime);\n          if (stop.departureTime) stop.departureTime = new Date(stop.departureTime);\n        });\n\n        this.plans.set(plan.id, plan);\n      });\n\n      const currentPlanId = await storage.get('current-plan-id') as string;\n      if (currentPlanId) {\n        this.currentPlan = this.plans.get(currentPlanId);\n      }\n    } catch (error) {\n      console.warn('Failed to load plans:', error);\n    }\n  }\n\n  private async savePlans(): Promise<void> {\n    try {\n      const plans = Array.from(this.plans.values());\n      await storage.set('trip-plans', plans);\n      \n      if (this.currentPlan) {\n        await storage.set('current-plan-id', this.currentPlan.id);\n      }\n    } catch (error) {\n      console.warn('Failed to save plans:', error);\n    }\n  }\n}\n\n// Global singleton\nexport const planningManager = new PlanningManager();\n\n// Hook for easier usage\nexport function usePlanning() {\n  return {\n    createPlan: planningManager.createPlan.bind(planningManager),\n    updatePlan: planningManager.updatePlan.bind(planningManager),\n    deletePlan: planningManager.deletePlan.bind(planningManager),\n    addStop: planningManager.addStop.bind(planningManager),\n    updateStop: planningManager.updateStop.bind(planningManager),\n    removeStop: planningManager.removeStop.bind(planningManager),\n    reorderStops: planningManager.reorderStops.bind(planningManager),\n    validatePlan: planningManager.validatePlan.bind(planningManager),\n    optimizeStopOrder: planningManager.optimizeStopOrder.bind(planningManager),\n    getPlan: planningManager.getPlan.bind(planningManager),\n    getCurrentPlan: planningManager.getCurrentPlan.bind(planningManager),\n    getAllPlans: planningManager.getAllPlans.bind(planningManager),\n    setCurrentPlan: planningManager.setCurrentPlan.bind(planningManager),\n    subscribe: (event: string, callback: Function) => {\n      planningManager.on(event, callback);\n      return () => planningManager.off(event, callback);\n    }\n  };\n}","import type { VoiceIntent } from '@/types';\nimport { AppError } from '@/types';\nimport { EventBus } from '@/lib/utils/events';\nimport { telemetry } from '@/lib/telemetry';\n\ninterface VoiceConfig {\n  language: string;\n  continuous: boolean;\n  interimResults: boolean;\n  maxAlternatives: number;\n}\n\ninterface STTProvider {\n  startListening(): Promise<void>;\n  stopListening(): Promise<void>;\n  isListening(): boolean;\n  isSupported(): boolean;\n}\n\nclass WebSpeechSTTProvider implements STTProvider {\n  private recognition?: SpeechRecognition;\n  private isActive = false;\n  private config: VoiceConfig;\n  private eventBus: EventBus;\n\n  constructor(config: VoiceConfig, eventBus: EventBus) {\n    this.config = config;\n    this.eventBus = eventBus;\n    this.initializeRecognition();\n  }\n\n  private initializeRecognition(): void {\n    if (!this.isSupported()) return;\n\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    this.recognition = new SpeechRecognition();\n    \n    this.recognition.continuous = this.config.continuous;\n    this.recognition.interimResults = this.config.interimResults;\n    this.recognition.lang = this.config.language;\n    this.recognition.maxAlternatives = this.config.maxAlternatives;\n\n    this.recognition.onstart = () => {\n      this.isActive = true;\n      this.eventBus.emit('stt-started');\n      telemetry.track('voice_recognition_started');\n    };\n\n    this.recognition.onend = () => {\n      this.isActive = false;\n      this.eventBus.emit('stt-ended');\n      telemetry.track('voice_recognition_ended');\n    };\n\n    this.recognition.onresult = (event) => {\n      const results = Array.from(event.results);\n      const transcript = results\n        .map(result => result[0].transcript)\n        .join(' ');\n\n      const confidence = results.length > 0 ? results[0][0].confidence : 0;\n      \n      this.eventBus.emit('stt-result', { transcript, confidence });\n      telemetry.track('voice_recognition_result', {\n        transcript_length: transcript.length,\n        confidence,\n        is_final: event.results[event.results.length - 1].isFinal\n      });\n    };\n\n    this.recognition.onerror = (event) => {\n      this.isActive = false;\n      this.eventBus.emit('stt-error', event.error);\n      telemetry.track('voice_recognition_error', { error: event.error });\n    };\n  }\n\n  async startListening(): Promise<void> {\n    if (!this.recognition || this.isActive) return;\n\n    try {\n      this.recognition.start();\n    } catch (error) {\n      throw new AppError('Failed to start speech recognition', 'STT_START_FAILED');\n    }\n  }\n\n  async stopListening(): Promise<void> {\n    if (!this.recognition || !this.isActive) return;\n\n    this.recognition.stop();\n  }\n\n  isListening(): boolean {\n    return this.isActive;\n  }\n\n  isSupported(): boolean {\n    return !!(window.SpeechRecognition || window.webkitSpeechRecognition);\n  }\n}\n\ninterface IntentParser {\n  parse(transcript: string): Promise<VoiceIntent>;\n}\n\nclass SimpleLinguisticParser implements IntentParser {\n  private patterns = {\n    plan_create: [\n      /plan.*trip.*to\\s+(.+)/i,\n      /create.*plan.*for\\s+(.+)/i,\n      /תכנן.*טיול.*ל(.+)/i,\n      /צור.*תוכנית.*ל(.+)/i\n    ],\n    plan_update: [\n      /add.*stop.*at\\s+(.+)/i,\n      /include.*(.+).*in.*plan/i,\n      /הוסף.*עצירה.*ב(.+)/i,\n      /כלול.*(.+).*בתוכנית/i\n    ],\n    search: [\n      /find.*(.+)/i,\n      /search.*for\\s+(.+)/i,\n      /look.*for\\s+(.+)/i,\n      /מצא.*(.+)/i,\n      /חפש.*(.+)/i\n    ],\n    navigate: [\n      /navigate.*to\\s+(.+)/i,\n      /directions.*to\\s+(.+)/i,\n      /go.*to\\s+(.+)/i,\n      /נווט.*ל(.+)/i,\n      /הוראות.*ל(.+)/i\n    ],\n    weather: [\n      /weather.*(?:in|at|for)\\s+(.+)/i,\n      /מזג.*אוויר.*ב(.+)/i\n    ]\n  };\n\n  async parse(transcript: string): Promise<VoiceIntent> {\n    const normalizedTranscript = transcript.trim().toLowerCase();\n    \n    for (const [intentType, patterns] of Object.entries(this.patterns)) {\n      for (const pattern of patterns) {\n        const match = normalizedTranscript.match(pattern);\n        if (match) {\n          return {\n            type: intentType as VoiceIntent['type'],\n            confidence: 0.8,\n            parameters: this.extractParameters(intentType, match),\n            original: transcript\n          };\n        }\n      }\n    }\n\n    // Fallback to search intent\n    return {\n      type: 'search',\n      confidence: 0.5,\n      parameters: { query: transcript },\n      original: transcript\n    };\n  }\n\n  private extractParameters(intentType: string, match: RegExpMatchArray): Record<string, any> {\n    const captured = match[1] || '';\n    \n    switch (intentType) {\n      case 'plan_create':\n        return { destination: captured.trim() };\n      case 'plan_update':\n        return { place: captured.trim() };\n      case 'search':\n      case 'navigate':\n        return { query: captured.trim() };\n      case 'weather':\n        return { location: captured.trim() };\n      default:\n        return { text: captured.trim() };\n    }\n  }\n}\n\nclass VoiceManager extends EventBus {\n  private sttProvider: STTProvider;\n  private intentParser: IntentParser;\n  private isInitialized = false;\n\n  constructor() {\n    super();\n    \n    const config: VoiceConfig = {\n      language: 'he-IL', // Hebrew support\n      continuous: false,\n      interimResults: true,\n      maxAlternatives: 3\n    };\n\n    this.sttProvider = new WebSpeechSTTProvider(config, this);\n    this.intentParser = new SimpleLinguisticParser();\n    \n    this.setupEventHandlers();\n  }\n\n  private setupEventHandlers(): void {\n    this.on('stt-result', async ({ transcript, confidence }) => {\n      try {\n        const intent = await this.intentParser.parse(transcript);\n        this.emit('intent-recognized', intent);\n        \n        telemetry.track('voice_intent_recognized', {\n          intent_type: intent.type,\n          confidence: intent.confidence,\n          has_parameters: Object.keys(intent.parameters).length > 0\n        });\n      } catch (error) {\n        console.error('Intent parsing failed:', error);\n        this.emit('intent-error', error);\n      }\n    });\n\n    this.on('stt-error', (error) => {\n      this.emit('voice-error', new AppError(`Speech recognition error: ${error}`, 'STT_ERROR'));\n    });\n  }\n\n  async initialize(): Promise<void> {\n    if (this.isInitialized) return;\n\n    if (!this.sttProvider.isSupported()) {\n      throw new AppError('Speech recognition not supported', 'STT_NOT_SUPPORTED');\n    }\n\n    this.isInitialized = true;\n    telemetry.track('voice_manager_initialized');\n  }\n\n  async startListening(): Promise<void> {\n    await this.initialize();\n    await this.sttProvider.startListening();\n    this.emit('listening-started');\n  }\n\n  async stopListening(): Promise<void> {\n    await this.sttProvider.stopListening();\n    this.emit('listening-stopped');\n  }\n\n  isListening(): boolean {\n    return this.sttProvider.isListening();\n  }\n\n  isSupported(): boolean {\n    return this.sttProvider.isSupported();\n  }\n\n  // Text-to-Speech functionality\n  speak(text: string, options: {\n    language?: string;\n    rate?: number;\n    pitch?: number;\n    volume?: number;\n  } = {}): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (!('speechSynthesis' in window)) {\n        reject(new AppError('Text-to-speech not supported', 'TTS_NOT_SUPPORTED'));\n        return;\n      }\n\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = options.language || 'he-IL';\n      utterance.rate = options.rate || 0.9;\n      utterance.pitch = options.pitch || 1.0;\n      utterance.volume = options.volume || 0.8;\n\n      utterance.onend = () => {\n        telemetry.track('voice_tts_completed', { text_length: text.length });\n        resolve();\n      };\n\n      utterance.onerror = (event) => {\n        telemetry.track('voice_tts_error', { error: event.error });\n        reject(new AppError(`Text-to-speech error: ${event.error}`, 'TTS_ERROR'));\n      };\n\n      speechSynthesis.speak(utterance);\n      telemetry.track('voice_tts_started', { text_length: text.length });\n    });\n  }\n\n  stopSpeaking(): void {\n    if ('speechSynthesis' in window) {\n      speechSynthesis.cancel();\n    }\n  }\n\n  isSpeaking(): boolean {\n    return 'speechSynthesis' in window && speechSynthesis.speaking;\n  }\n\n  // Press and hold interface\n  async startPressAndHold(): Promise<void> {\n    await this.startListening();\n    // Visual feedback for press and hold\n    document.body.classList.add('voice-listening');\n  }\n\n  async endPressAndHold(): Promise<void> {\n    await this.stopListening();\n    document.body.classList.remove('voice-listening');\n  }\n\n  // Quick voice commands\n  async processQuickCommand(command: string): Promise<VoiceIntent> {\n    const intent = await this.intentParser.parse(command);\n    this.emit('intent-recognized', intent);\n    return intent;\n  }\n}\n\n// Global voice manager instance\nexport const voiceManager = new VoiceManager();\n\n// Hook for easier usage\nexport function useVoice() {\n  return {\n    startListening: voiceManager.startListening.bind(voiceManager),\n    stopListening: voiceManager.stopListening.bind(voiceManager),\n    isListening: voiceManager.isListening.bind(voiceManager),\n    isSupported: voiceManager.isSupported.bind(voiceManager),\n    speak: voiceManager.speak.bind(voiceManager),\n    stopSpeaking: voiceManager.stopSpeaking.bind(voiceManager),\n    isSpeaking: voiceManager.isSpeaking.bind(voiceManager),\n    startPressAndHold: voiceManager.startPressAndHold.bind(voiceManager),\n    endPressAndHold: voiceManager.endPressAndHold.bind(voiceManager),\n    processQuickCommand: voiceManager.processQuickCommand.bind(voiceManager),\n    subscribe: (event: string, callback: Function) => {\n      voiceManager.on(event, callback);\n      return () => voiceManager.off(event, callback);\n    }\n  };\n}\n\n// Extend window interface for TypeScript\ndeclare global {\n  interface Window {\n    SpeechRecognition: typeof SpeechRecognition;\n    webkitSpeechRecognition: typeof SpeechRecognition;\n  }\n}","import type { Route, RouteLeg, RouteStep, LatLng, TripPlan } from '@/types';\nimport { AppError } from '@/types';\nimport { EventBus } from '@/lib/utils/events';\nimport { telemetry } from '@/lib/telemetry';\n\ninterface NavigationState {\n  isNavigating: boolean;\n  currentRoute?: Route;\n  currentLeg: number;\n  currentStep: number;\n  currentLocation?: LatLng;\n  nextInstruction?: RouteStep;\n  distanceToNextStep: number;\n  estimatedTimeRemaining: number;\n}\n\ninterface NavigationSettings {\n  voiceGuidance: boolean;\n  units: 'metric' | 'imperial';\n  avoidTolls: boolean;\n  routePreference: 'fastest' | 'shortest' | 'scenic';\n}\n\nclass NavigationManager extends EventBus {\n  private state: NavigationState = {\n    isNavigating: false,\n    currentLeg: 0,\n    currentStep: 0,\n    distanceToNextStep: 0,\n    estimatedTimeRemaining: 0\n  };\n\n  private settings: NavigationSettings = {\n    voiceGuidance: true,\n    units: 'metric',\n    avoidTolls: false,\n    routePreference: 'fastest'\n  };\n\n  private watchId?: number;\n  private lastAnnouncedStep = -1;\n\n  constructor() {\n    super();\n    this.loadSettings();\n  }\n\n  async startNavigation(route: Route, startFromStep = 0): Promise<void> {\n    try {\n      this.state = {\n        isNavigating: true,\n        currentRoute: route,\n        currentLeg: 0,\n        currentStep: startFromStep,\n        distanceToNextStep: 0,\n        estimatedTimeRemaining: route.overview.duration\n      };\n\n      await this.startLocationTracking();\n      this.emit('navigation-started', this.state);\n      \n      telemetry.track('navigation_started', {\n        total_distance: route.overview.distance,\n        total_duration: route.overview.duration,\n        legs_count: route.legs.length\n      });\n\n      // Announce first instruction\n      if (this.settings.voiceGuidance) {\n        this.announceNextInstruction();\n      }\n    } catch (error) {\n      telemetry.track('navigation_start_error', {\n        error: error instanceof Error ? error.message : 'Unknown error'\n      });\n      throw error;\n    }\n  }\n\n  async stopNavigation(): Promise<void> {\n    this.state.isNavigating = false;\n    this.stopLocationTracking();\n    this.emit('navigation-stopped');\n    \n    telemetry.track('navigation_stopped', {\n      was_completed: this.isNavigationComplete()\n    });\n  }\n\n  async pauseNavigation(): Promise<void> {\n    this.stopLocationTracking();\n    this.emit('navigation-paused');\n    telemetry.track('navigation_paused');\n  }\n\n  async resumeNavigation(): Promise<void> {\n    if (!this.state.currentRoute) {\n      throw new AppError('No active route to resume', 'NO_ACTIVE_ROUTE');\n    }\n\n    await this.startLocationTracking();\n    this.emit('navigation-resumed');\n    telemetry.track('navigation_resumed');\n  }\n\n  private async startLocationTracking(): Promise<void> {\n    if (!navigator.geolocation) {\n      throw new AppError('Geolocation not supported', 'GEOLOCATION_NOT_SUPPORTED');\n    }\n\n    return new Promise((resolve, reject) => {\n      const options: PositionOptions = {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 1000\n      };\n\n      // Get initial position\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          this.updateLocation({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          });\n          \n          // Start watching position\n          this.watchId = navigator.geolocation.watchPosition(\n            (position) => {\n              this.updateLocation({\n                lat: position.coords.latitude,\n                lng: position.coords.longitude\n              });\n            },\n            (error) => {\n              console.error('Location tracking error:', error);\n              this.emit('navigation-error', new AppError(\n                `Location tracking failed: ${error.message}`,\n                'LOCATION_TRACKING_FAILED'\n              ));\n            },\n            options\n          );\n          \n          resolve();\n        },\n        (error) => {\n          reject(new AppError(\n            `Failed to get initial location: ${error.message}`,\n            'INITIAL_LOCATION_FAILED'\n          ));\n        },\n        options\n      );\n    });\n  }\n\n  private stopLocationTracking(): void {\n    if (this.watchId !== undefined) {\n      navigator.geolocation.clearWatch(this.watchId);\n      this.watchId = undefined;\n    }\n  }\n\n  private updateLocation(location: LatLng): void {\n    this.state.currentLocation = location;\n    \n    if (!this.state.currentRoute || !this.state.isNavigating) return;\n\n    // Update navigation state based on current location\n    this.updateNavigationProgress(location);\n    this.emit('location-updated', { location, state: this.state });\n  }\n\n  private updateNavigationProgress(location: LatLng): void {\n    if (!this.state.currentRoute) return;\n\n    const currentLeg = this.state.currentRoute.legs[this.state.currentLeg];\n    if (!currentLeg) return;\n\n    const currentStep = currentLeg.steps[this.state.currentStep];\n    if (!currentStep) return;\n\n    // Calculate distance to next step\n    this.state.distanceToNextStep = this.calculateDistance(location, currentStep.end);\n\n    // Check if we've reached the current step\n    if (this.state.distanceToNextStep < 20) { // 20 meters threshold\n      this.advanceToNextStep();\n    }\n\n    // Update estimated time remaining\n    this.updateEstimatedTime();\n\n    // Check for voice announcements\n    this.checkVoiceAnnouncements();\n  }\n\n  private advanceToNextStep(): void {\n    if (!this.state.currentRoute) return;\n\n    const currentLeg = this.state.currentRoute.legs[this.state.currentLeg];\n    if (!currentLeg) return;\n\n    this.state.currentStep++;\n\n    // Check if we've completed the current leg\n    if (this.state.currentStep >= currentLeg.steps.length) {\n      this.state.currentLeg++;\n      this.state.currentStep = 0;\n\n      // Check if we've completed the entire route\n      if (this.state.currentLeg >= this.state.currentRoute.legs.length) {\n        this.completeNavigation();\n        return;\n      }\n\n      this.emit('leg-completed', {\n        completedLeg: this.state.currentLeg - 1,\n        currentLeg: this.state.currentLeg\n      });\n    }\n\n    // Announce next instruction\n    if (this.settings.voiceGuidance) {\n      this.announceNextInstruction();\n    }\n\n    this.emit('step-advanced', this.state);\n    telemetry.track('navigation_step_advanced', {\n      leg: this.state.currentLeg,\n      step: this.state.currentStep\n    });\n  }\n\n  private completeNavigation(): void {\n    this.state.isNavigating = false;\n    this.stopLocationTracking();\n    \n    this.emit('navigation-completed');\n    telemetry.track('navigation_completed', {\n      total_legs: this.state.currentRoute?.legs.length,\n      final_leg: this.state.currentLeg,\n      final_step: this.state.currentStep\n    });\n\n    if (this.settings.voiceGuidance) {\n      this.speak('You have arrived at your destination!');\n    }\n  }\n\n  private updateEstimatedTime(): void {\n    if (!this.state.currentRoute) return;\n\n    // Calculate remaining time based on remaining distance and average speed\n    let remainingDistance = 0;\n    \n    // Add distance from current location to end of current step\n    remainingDistance += this.state.distanceToNextStep;\n    \n    // Add distance for remaining steps in current leg\n    const currentLeg = this.state.currentRoute.legs[this.state.currentLeg];\n    if (currentLeg) {\n      for (let i = this.state.currentStep + 1; i < currentLeg.steps.length; i++) {\n        remainingDistance += currentLeg.steps[i].distance;\n      }\n    }\n    \n    // Add distance for remaining legs\n    for (let i = this.state.currentLeg + 1; i < this.state.currentRoute.legs.length; i++) {\n      remainingDistance += this.state.currentRoute.legs[i].distance;\n    }\n\n    // Estimate time based on average speed (assuming 50 km/h average)\n    const averageSpeedMs = 50 * 1000 / 3600; // 50 km/h to m/s\n    this.state.estimatedTimeRemaining = Math.round(remainingDistance / averageSpeedMs);\n  }\n\n  private checkVoiceAnnouncements(): void {\n    if (!this.settings.voiceGuidance) return;\n    if (!this.state.currentRoute) return;\n\n    const currentLeg = this.state.currentRoute.legs[this.state.currentLeg];\n    if (!currentLeg) return;\n\n    const currentStep = currentLeg.steps[this.state.currentStep];\n    if (!currentStep) return;\n\n    // Announce at different distances\n    const distance = this.state.distanceToNextStep;\n    \n    if (distance <= 100 && this.lastAnnouncedStep !== this.state.currentStep) {\n      this.announceNextInstruction();\n      this.lastAnnouncedStep = this.state.currentStep;\n    }\n  }\n\n  private announceNextInstruction(): void {\n    if (!this.state.currentRoute) return;\n\n    const currentLeg = this.state.currentRoute.legs[this.state.currentLeg];\n    if (!currentLeg) return;\n\n    const nextStepIndex = this.state.currentStep + 1;\n    const nextStep = currentLeg.steps[nextStepIndex];\n    \n    if (nextStep) {\n      const distance = this.formatDistance(this.state.distanceToNextStep);\n      const instruction = `In ${distance}, ${nextStep.instruction}`;\n      this.speak(instruction);\n    }\n  }\n\n  private speak(text: string): void {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.rate = 0.9;\n      utterance.volume = 0.8;\n      speechSynthesis.speak(utterance);\n    }\n  }\n\n  private formatDistance(meters: number): string {\n    if (this.settings.units === 'imperial') {\n      const feet = meters * 3.28084;\n      if (feet < 1000) {\n        return `${Math.round(feet)} feet`;\n      } else {\n        const miles = feet / 5280;\n        return `${miles.toFixed(1)} miles`;\n      }\n    } else {\n      if (meters < 1000) {\n        return `${Math.round(meters)} meters`;\n      } else {\n        const km = meters / 1000;\n        return `${km.toFixed(1)} kilometers`;\n      }\n    }\n  }\n\n  private calculateDistance(from: LatLng, to: LatLng): number {\n    const R = 6371e3; // Earth's radius in meters\n    const φ1 = from.lat * Math.PI / 180;\n    const φ2 = to.lat * Math.PI / 180;\n    const Δφ = (to.lat - from.lat) * Math.PI / 180;\n    const Δλ = (to.lng - from.lng) * Math.PI / 180;\n\n    const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\n              Math.cos(φ1) * Math.cos(φ2) *\n              Math.sin(Δλ/2) * Math.sin(Δλ/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n\n    return R * c;\n  }\n\n  // Public API methods\n  getState(): NavigationState {\n    return { ...this.state };\n  }\n\n  getCurrentInstruction(): string {\n    if (!this.state.currentRoute) return '';\n\n    const currentLeg = this.state.currentRoute.legs[this.state.currentLeg];\n    if (!currentLeg) return '';\n\n    const currentStep = currentLeg.steps[this.state.currentStep];\n    return currentStep?.instruction || '';\n  }\n\n  getUpcomingInstructions(count = 3): RouteStep[] {\n    if (!this.state.currentRoute) return [];\n\n    const currentLeg = this.state.currentRoute.legs[this.state.currentLeg];\n    if (!currentLeg) return [];\n\n    const upcoming: RouteStep[] = [];\n    let stepIndex = this.state.currentStep + 1;\n    let legIndex = this.state.currentLeg;\n\n    while (upcoming.length < count && legIndex < this.state.currentRoute.legs.length) {\n      const leg = this.state.currentRoute.legs[legIndex];\n      \n      if (stepIndex < leg.steps.length) {\n        upcoming.push(leg.steps[stepIndex]);\n        stepIndex++;\n      } else {\n        legIndex++;\n        stepIndex = 0;\n      }\n    }\n\n    return upcoming;\n  }\n\n  updateSettings(newSettings: Partial<NavigationSettings>): void {\n    this.settings = { ...this.settings, ...newSettings };\n    this.saveSettings();\n    this.emit('settings-updated', this.settings);\n  }\n\n  getSettings(): NavigationSettings {\n    return { ...this.settings };\n  }\n\n  private loadSettings(): void {\n    try {\n      const saved = localStorage.getItem('navigation-settings');\n      if (saved) {\n        this.settings = { ...this.settings, ...JSON.parse(saved) };\n      }\n    } catch (error) {\n      console.warn('Failed to load navigation settings:', error);\n    }\n  }\n\n  private saveSettings(): void {\n    try {\n      localStorage.setItem('navigation-settings', JSON.stringify(this.settings));\n    } catch (error) {\n      console.warn('Failed to save navigation settings:', error);\n    }\n  }\n\n  isNavigationComplete(): boolean {\n    if (!this.state.currentRoute) return false;\n    return this.state.currentLeg >= this.state.currentRoute.legs.length;\n  }\n\n  // Simulation methods for testing\n  simulateLocation(location: LatLng): void {\n    if (import.meta.env.DEV) {\n      this.updateLocation(location);\n    }\n  }\n\n  simulateProgress(legIndex: number, stepIndex: number): void {\n    if (import.meta.env.DEV) {\n      this.state.currentLeg = legIndex;\n      this.state.currentStep = stepIndex;\n      this.emit('step-advanced', this.state);\n    }\n  }\n}\n\n// Global navigation manager\nexport const navigationManager = new NavigationManager();\n\n// Hook for easier usage\nexport function useNavigation() {\n  return {\n    startNavigation: navigationManager.startNavigation.bind(navigationManager),\n    stopNavigation: navigationManager.stopNavigation.bind(navigationManager),\n    pauseNavigation: navigationManager.pauseNavigation.bind(navigationManager),\n    resumeNavigation: navigationManager.resumeNavigation.bind(navigationManager),\n    getState: navigationManager.getState.bind(navigationManager),\n    getCurrentInstruction: navigationManager.getCurrentInstruction.bind(navigationManager),\n    getUpcomingInstructions: navigationManager.getUpcomingInstructions.bind(navigationManager),\n    updateSettings: navigationManager.updateSettings.bind(navigationManager),\n    getSettings: navigationManager.getSettings.bind(navigationManager),\n    subscribe: (event: string, callback: Function) => {\n      navigationManager.on(event, callback);\n      return () => navigationManager.off(event, callback);\n    }\n  };\n}","import type { LatLng, Route, Place } from '@/types';\nimport { EventBus } from '@/lib/utils/events';\nimport { themeProvider } from '@/core/theme/ThemeProvider';\nimport { telemetry } from '@/lib/telemetry';\nimport * as L from 'leaflet';\n\ninterface MapConfig {\n  providers: any;\n  center?: LatLng;\n  zoom?: number;\n}\n\nexport class MapManager extends EventBus {\n  private map?: L.Map;\n  private config: MapConfig;\n  private layers = {\n    route: L.layerGroup(),\n    places: L.layerGroup(),\n    user: L.layerGroup()\n  };\n  private currentLocation?: LatLng;\n\n  constructor(config: MapConfig) {\n    super();\n    this.config = config;\n  }\n\n  async initialize(): Promise<void> {\n    const mapContainer = document.getElementById('map');\n    if (!mapContainer) {\n      throw new Error('Map container not found');\n    }\n\n    // Initialize Leaflet map\n    this.map = L.map(mapContainer, {\n      center: this.config.center || [32.0853, 34.7818], // Tel Aviv default\n      zoom: this.config.zoom || 13,\n      zoomControl: true,\n      attributionControl: true\n    });\n\n    // Add tile layer based on theme\n    this.updateMapTiles();\n\n    // Add layer groups\n    Object.values(this.layers).forEach(layer => {\n      layer.addTo(this.map!);\n    });\n\n    // Setup event handlers\n    this.setupMapEvents();\n\n    telemetry.track('map_initialized', {\n      center: this.config.center,\n      zoom: this.config.zoom\n    });\n  }\n\n  private updateMapTiles(): void {\n    if (!this.map) return;\n\n    // Remove existing tile layers\n    this.map.eachLayer(layer => {\n      if (layer instanceof L.TileLayer) {\n        this.map!.removeLayer(layer);\n      }\n    });\n\n    // Add new tile layer based on theme\n    const tileLayer = L.tileLayer(themeProvider.getMapTileURL(), {\n      attribution: themeProvider.getMapTileAttribution(),\n      maxZoom: 19\n    });\n\n    tileLayer.addTo(this.map);\n  }\n\n  private setupMapEvents(): void {\n    if (!this.map) return;\n\n    this.map.on('click', (e) => {\n      this.emit('map-clicked', { location: e.latlng });\n      telemetry.track('map_clicked', {\n        lat: e.latlng.lat,\n        lng: e.latlng.lng,\n        zoom: this.map!.getZoom()\n      });\n    });\n\n    this.map.on('zoomend', () => {\n      this.emit('zoom-changed', { zoom: this.map!.getZoom() });\n    });\n\n    this.map.on('moveend', () => {\n      const center = this.map!.getCenter();\n      this.emit('center-changed', { center });\n    });\n  }\n\n  updateTheme(theme: 'light' | 'dark'): void {\n    this.updateMapTiles();\n    telemetry.track('map_theme_updated', { theme });\n  }\n\n  setCenter(location: LatLng, zoom?: number): void {\n    if (!this.map) return;\n    \n    this.map.setView([location.lat, location.lng], zoom || this.map.getZoom());\n    this.emit('center-changed', { center: location });\n  }\n\n  addPlace(place: Place, options: { showPopup?: boolean; focus?: boolean } = {}): L.Marker {\n    if (!this.map) throw new Error('Map not initialized');\n\n    const marker = L.marker([place.location.lat, place.location.lng])\n      .bindPopup(`\n        <div class=\"place-popup\">\n          <h3>${place.name}</h3>\n          ${place.address ? `<p>${place.address}</p>` : ''}\n          ${place.rating ? `<div>⭐ ${place.rating} (${place.userRatingsTotal || 0} reviews)</div>` : ''}\n          <div class=\"popup-actions\">\n            <button onclick=\"window.mapManager.focusPlace('${place.id}')\">Details</button>\n            <button onclick=\"window.mapManager.navigateToPlace('${place.id}')\">Navigate</button>\n          </div>\n        </div>\n      `);\n\n    marker.addTo(this.layers.places);\n\n    if (options.showPopup) {\n      marker.openPopup();\n    }\n\n    if (options.focus) {\n      this.setCenter(place.location, 16);\n    }\n\n    telemetry.track('place_added_to_map', {\n      place_id: place.id,\n      show_popup: options.showPopup,\n      focus: options.focus\n    });\n\n    return marker;\n  }\n\n  addRoute(route: Route, options: { color?: string; weight?: number } = {}): L.Polyline {\n    if (!this.map) throw new Error('Map not initialized');\n\n    // Decode polyline and create Leaflet polyline\n    const coordinates = this.decodePolyline(route.overview.polyline);\n    const polyline = L.polyline(coordinates, {\n      color: options.color || '#3b82f6',\n      weight: options.weight || 5,\n      opacity: 0.8\n    });\n\n    polyline.addTo(this.layers.route);\n\n    // Add markers for start and end\n    if (route.legs.length > 0) {\n      const firstLeg = route.legs[0];\n      const lastLeg = route.legs[route.legs.length - 1];\n\n      L.marker([firstLeg.start.lat, firstLeg.start.lng])\n        .bindPopup('Start')\n        .addTo(this.layers.route);\n\n      L.marker([lastLeg.end.lat, lastLeg.end.lng])\n        .bindPopup('Destination')\n        .addTo(this.layers.route);\n    }\n\n    // Fit map to route bounds\n    this.map.fitBounds(polyline.getBounds(), { padding: [20, 20] });\n\n    telemetry.track('route_added_to_map', {\n      distance: route.overview.distance,\n      duration: route.overview.duration,\n      legs_count: route.legs.length\n    });\n\n    return polyline;\n  }\n\n  setUserLocation(location: LatLng, accuracy?: number): void {\n    if (!this.map) return;\n\n    this.currentLocation = location;\n\n    // Clear existing user location markers\n    this.layers.user.clearLayers();\n\n    // Add user location marker\n    const userMarker = L.marker([location.lat, location.lng], {\n      icon: L.divIcon({\n        className: 'user-location-marker',\n        html: '<div class=\"user-location-dot\"></div>',\n        iconSize: [20, 20],\n        iconAnchor: [10, 10]\n      })\n    }).bindPopup('Your location');\n\n    userMarker.addTo(this.layers.user);\n\n    // Add accuracy circle if provided\n    if (accuracy) {\n      const accuracyCircle = L.circle([location.lat, location.lng], {\n        radius: accuracy,\n        weight: 1,\n        color: '#3b82f6',\n        fillColor: '#3b82f6',\n        fillOpacity: 0.1\n      });\n\n      accuracyCircle.addTo(this.layers.user);\n    }\n\n    this.emit('user-location-updated', { location, accuracy });\n  }\n\n  getCurrentLocation(): LatLng | undefined {\n    return this.currentLocation;\n  }\n\n  clearPlaces(): void {\n    this.layers.places.clearLayers();\n  }\n\n  clearRoute(): void {\n    this.layers.route.clearLayers();\n  }\n\n  clearAll(): void {\n    Object.values(this.layers).forEach(layer => layer.clearLayers());\n  }\n\n  focusPlace(placeId: string): void {\n    // Implementation would focus on a specific place\n    this.emit('place-focused', { placeId });\n  }\n\n  navigateToPlace(placeId: string): void {\n    // Implementation would start navigation to place\n    this.emit('navigation-requested', { placeId });\n  }\n\n  // Utility method to decode Google polyline\n  private decodePolyline(encoded: string): [number, number][] {\n    const poly: [number, number][] = [];\n    let index = 0;\n    const len = encoded.length;\n    let lat = 0;\n    let lng = 0;\n\n    while (index < len) {\n      let b: number;\n      let shift = 0;\n      let result = 0;\n\n      do {\n        b = encoded.charCodeAt(index++) - 63;\n        result |= (b & 0x1f) << shift;\n        shift += 5;\n      } while (b >= 0x20);\n\n      const dlat = ((result & 1) !== 0 ? ~(result >> 1) : (result >> 1));\n      lat += dlat;\n\n      shift = 0;\n      result = 0;\n\n      do {\n        b = encoded.charCodeAt(index++) - 63;\n        result |= (b & 0x1f) << shift;\n        shift += 5;\n      } while (b >= 0x20);\n\n      const dlng = ((result & 1) !== 0 ? ~(result >> 1) : (result >> 1));\n      lng += dlng;\n\n      poly.push([lat / 1e5, lng / 1e5]);\n    }\n\n    return poly;\n  }\n\n  destroy(): void {\n    if (this.map) {\n      this.map.remove();\n      this.map = undefined;\n    }\n    super.destroy();\n  }\n}\n\n// Global reference for popup callbacks\nif (typeof window !== 'undefined') {\n  (window as any).mapManager = {\n    focusPlace: (placeId: string) => {\n      // Global event for place focus\n      window.dispatchEvent(new CustomEvent('place-focus', { detail: { placeId } }));\n    },\n    navigateToPlace: (placeId: string) => {\n      // Global event for navigation request\n      window.dispatchEvent(new CustomEvent('navigation-request', { detail: { placeId } }));\n    }\n  };\n}","import type { VoiceIntent, UpdateInfo, Place, Route, TripPlan } from '@/types';\nimport { EventBus } from '@/lib/utils/events';\nimport { telemetry } from '@/lib/telemetry';\n\ninterface UIConfig {\n  planningManager: any;\n  voiceManager: any;\n  navigationManager: any;\n  aiOrchestrator: any;\n  providers: any;\n}\n\nexport class UIManager extends EventBus {\n  private config: UIConfig;\n  private isInitialized = false;\n  private currentView = 'search';\n\n  constructor(config: UIConfig) {\n    super();\n    this.config = config;\n  }\n\n  async initialize(): Promise<void> {\n    if (this.isInitialized) return;\n\n    this.setupNavigation();\n    this.setupVoiceUI();\n    this.setupPlanningUI();\n    this.setupSearchUI();\n    this.setupUpdateUI();\n    this.setupThemeToggle();\n\n    this.isInitialized = true;\n    telemetry.track('ui_manager_initialized');\n  }\n\n  private setupNavigation(): void {\n    // Support both nav-item and nav-btn classes for compatibility\n    const navItems = document.querySelectorAll('.nav-item, .nav-btn');\n    const views = document.querySelectorAll('.mobile-view, .app-view');\n\n    navItems.forEach(item => {\n      item.addEventListener('click', () => {\n        const targetView = item.getAttribute('data-view');\n        if (!targetView) return;\n\n        // Update navigation\n        navItems.forEach(nav => nav.classList.remove('active'));\n        item.classList.add('active');\n\n        // Update views\n        views.forEach(view => view.classList.remove('active'));\n        const targetElement = document.querySelector(`[data-view=\"${targetView}\"]`);\n        if (targetElement) {\n          targetElement.classList.add('active');\n        }\n\n        this.currentView = targetView;\n        this.emit('view-changed', { view: targetView });\n        telemetry.track('view_changed', { view: targetView });\n\n        // Handle view-specific initialization\n        this.handleViewChange(targetView);\n      });\n    });\n  }\n\n  private handleViewChange(view: string): void {\n    switch (view) {\n      case 'map':\n        this.emit('map-view-activated');\n        break;\n      case 'trip':\n        this.initializeTripPlanning();\n        break;\n      case 'ai':\n        this.initializeAIInterface();\n        break;\n      case 'voice':\n        this.initializeVoiceInterface();\n        break;\n    }\n  }\n\n  private setupVoiceUI(): void {\n    const voiceBtn = document.getElementById('voiceBtn');\n    if (!voiceBtn) return;\n\n    let isHolding = false;\n\n    const startListening = async () => {\n      if (isHolding) return;\n      isHolding = true;\n      \n      try {\n        await this.config.voiceManager.startPressAndHold();\n        voiceBtn.classList.add('listening');\n        this.showVoiceStatus('Listening... Release to stop');\n        telemetry.track('voice_press_and_hold_started');\n      } catch (error) {\n        console.error('Voice listening failed:', error);\n        this.showVoiceStatus('Voice not available');\n        isHolding = false;\n      }\n    };\n\n    const stopListening = async () => {\n      if (!isHolding) return;\n      isHolding = false;\n\n      try {\n        await this.config.voiceManager.endPressAndHold();\n        voiceBtn.classList.remove('listening');\n        this.showVoiceStatus('Processing...');\n        telemetry.track('voice_press_and_hold_ended');\n      } catch (error) {\n        console.error('Voice stop failed:', error);\n        this.showVoiceStatus('');\n      }\n    };\n\n    // Mouse events\n    voiceBtn.addEventListener('mousedown', startListening);\n    voiceBtn.addEventListener('mouseup', stopListening);\n    voiceBtn.addEventListener('mouseleave', stopListening);\n\n    // Touch events\n    voiceBtn.addEventListener('touchstart', (e) => {\n      e.preventDefault();\n      startListening();\n    });\n    voiceBtn.addEventListener('touchend', (e) => {\n      e.preventDefault();\n      stopListening();\n    });\n    voiceBtn.addEventListener('touchcancel', stopListening);\n  }\n\n  private setupPlanningUI(): void {\n    // Duration selection\n    document.querySelectorAll('.duration-option').forEach(btn => {\n      btn.addEventListener('click', () => {\n        document.querySelectorAll('.duration-option').forEach(b => b.classList.remove('selected'));\n        btn.classList.add('selected');\n      });\n    });\n\n    // Interest selection\n    document.querySelectorAll('.interest-option').forEach(btn => {\n      btn.addEventListener('click', () => {\n        btn.classList.toggle('selected');\n        \n        // Limit to 4 selections\n        const selected = document.querySelectorAll('.interest-option.selected');\n        if (selected.length > 4) {\n          btn.classList.remove('selected');\n          this.showNotification('Maximum 4 interests allowed', 'warning');\n        }\n      });\n    });\n\n    // Budget slider\n    const budgetSlider = document.getElementById('budgetRange') as HTMLInputElement;\n    const budgetAmount = document.getElementById('budgetAmount');\n    if (budgetSlider && budgetAmount) {\n      budgetSlider.addEventListener('input', () => {\n        budgetAmount.textContent = budgetSlider.value;\n      });\n    }\n\n    // Generate trip button\n    const generateBtn = document.getElementById('generateTripBtn');\n    if (generateBtn) {\n      generateBtn.addEventListener('click', this.handleTripGeneration.bind(this));\n    }\n  }\n\n  private async handleTripGeneration(): Promise<void> {\n    const generateBtn = document.getElementById('generateTripBtn') as HTMLButtonElement;\n    const statusEl = document.getElementById('tripGenerationStatus');\n\n    if (!generateBtn || !statusEl) return;\n\n    generateBtn.disabled = true;\n    generateBtn.textContent = 'Generating...';\n    statusEl.textContent = 'Creating your perfect trip...';\n\n    try {\n      // Get form data\n      const duration = this.getSelectedDuration();\n      const interests = this.getSelectedInterests();\n      const budget = parseInt((document.getElementById('budgetRange') as HTMLInputElement)?.value || '300');\n      const groupType = (document.getElementById('groupType') as HTMLSelectElement)?.value || 'couple';\n      const groupSize = parseInt((document.getElementById('groupSize') as HTMLInputElement)?.value || '2');\n\n      // Create trip plan\n      const plan = await this.config.planningManager.createPlan(\n        'AI Generated Trip',\n        'Automatically generated based on your preferences'\n      );\n\n      // TODO: Use AI orchestrator to populate the plan\n      statusEl.textContent = 'Trip generated successfully!';\n      this.showTripPlan(plan);\n\n      telemetry.track('trip_generated', {\n        duration,\n        interests: interests.length,\n        budget,\n        group_type: groupType,\n        group_size: groupSize\n      });\n\n    } catch (error) {\n      console.error('Trip generation failed:', error);\n      statusEl.textContent = 'Failed to generate trip. Please try again.';\n      this.showError('Trip generation failed');\n    } finally {\n      generateBtn.disabled = false;\n      generateBtn.textContent = 'Generate Smart Trip';\n    }\n  }\n\n  private setupSearchUI(): void {\n    const searchBtn = document.getElementById('searchBtn');\n    const searchInput = document.getElementById('freeText') as HTMLInputElement;\n\n    if (searchBtn && searchInput) {\n      const performSearch = async () => {\n        const query = searchInput.value.trim();\n        if (!query) return;\n\n        try {\n          searchBtn.textContent = 'Searching...';\n          // TODO: Implement search via providers\n          this.showSearchResults([]);\n          telemetry.track('search_performed', { query });\n        } catch (error) {\n          console.error('Search failed:', error);\n          this.showError('Search failed');\n        } finally {\n          searchBtn.textContent = 'Search';\n        }\n      };\n\n      searchBtn.addEventListener('click', performSearch);\n      searchInput.addEventListener('keypress', (e) => {\n        if (e.key === 'Enter') performSearch();\n      });\n    }\n\n    // Quick search categories\n    document.querySelectorAll('.category-card').forEach(card => {\n      card.addEventListener('click', () => {\n        const preset = card.getAttribute('data-preset');\n        if (preset) {\n          this.performQuickSearch(preset);\n        }\n      });\n    });\n  }\n\n  private setupUpdateUI(): void {\n    // Create update notification container if it doesn't exist\n    if (!document.getElementById('updateNotification')) {\n      const container = document.createElement('div');\n      container.id = 'updateNotification';\n      container.className = 'update-notification hidden';\n      document.body.appendChild(container);\n    }\n  }\n\n  private setupThemeToggle(): void {\n    const themeToggle = document.getElementById('themeToggle');\n    if (!themeToggle) return;\n\n    themeToggle.addEventListener('click', () => {\n      // Theme toggle is handled by ThemeProvider\n      this.emit('theme-toggle-clicked');\n      telemetry.track('theme_toggle_clicked');\n    });\n  }\n\n  // Public methods\n  showUpdateNotification(updateInfo: UpdateInfo): void {\n    const container = document.getElementById('updateNotification');\n    if (!container) return;\n\n    container.innerHTML = `\n      <div class=\"update-card\">\n        <div class=\"update-header\">\n          <h3>🎉 Update Available</h3>\n          <button class=\"close-btn\" onclick=\"this.parentElement.parentElement.parentElement.classList.add('hidden')\">×</button>\n        </div>\n        <div class=\"update-content\">\n          <p>Version ${updateInfo.latest} is available</p>\n          ${updateInfo.urgent ? '<p class=\"urgent\">⚠️ Important security update</p>' : ''}\n          <div class=\"update-actions\">\n            <button class=\"btn-primary\" onclick=\"window.updateManager.applyUpdate()\">Update Now</button>\n            <button class=\"btn-secondary\" onclick=\"this.parentElement.parentElement.parentElement.classList.add('hidden')\">Later</button>\n          </div>\n        </div>\n      </div>\n    `;\n\n    container.classList.remove('hidden');\n    telemetry.track('update_notification_displayed', updateInfo);\n  }\n\n  showError(message: string): void {\n    this.showNotification(message, 'error');\n  }\n\n  showSuccess(message: string): void {\n    this.showNotification(message, 'success');\n  }\n\n  showNotification(message: string, type: 'info' | 'success' | 'warning' | 'error' = 'info'): void {\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.textContent = message;\n\n    document.body.appendChild(notification);\n\n    // Auto remove after 3 seconds\n    setTimeout(() => {\n      notification.remove();\n    }, 3000);\n\n    telemetry.track('notification_shown', { message, type });\n  }\n\n  handleAIResult(intentType: string, result: any): void {\n    switch (intentType) {\n      case 'plan_create':\n        this.showTripPlan(result.plan);\n        break;\n      case 'search':\n        this.showSearchResults(result);\n        break;\n      case 'weather':\n        this.showWeatherInfo(result);\n        break;\n      default:\n        console.log('AI result:', result);\n    }\n  }\n\n  enterNavigationMode(): void {\n    document.body.classList.add('navigation-mode');\n    this.currentView = 'navigation';\n    this.emit('navigation-mode-entered');\n  }\n\n  exitNavigationMode(): void {\n    document.body.classList.remove('navigation-mode');\n    this.emit('navigation-mode-exited');\n  }\n\n  // Helper methods\n  private getSelectedDuration(): number {\n    const selected = document.querySelector('.duration-option.selected');\n    return parseInt(selected?.getAttribute('data-duration') || '8');\n  }\n\n  private getSelectedInterests(): string[] {\n    const selected = document.querySelectorAll('.interest-option.selected');\n    return Array.from(selected).map(el => el.getAttribute('data-interest')).filter(Boolean) as string[];\n  }\n\n  private showVoiceStatus(message: string): void {\n    const statusEl = document.getElementById('voiceStatus');\n    if (statusEl) {\n      statusEl.textContent = message;\n    }\n  }\n\n  private async performQuickSearch(category: string): Promise<void> {\n    try {\n      // TODO: Implement quick search\n      telemetry.track('quick_search_performed', { category });\n    } catch (error) {\n      console.error('Quick search failed:', error);\n      this.showError('Search failed');\n    }\n  }\n\n  private showTripPlan(plan: TripPlan): void {\n    const display = document.getElementById('enhancedTripDisplay');\n    if (display) {\n      display.hidden = false;\n      // TODO: Populate trip plan display\n    }\n  }\n\n  private showSearchResults(results: Place[]): void {\n    const listEl = document.getElementById('list');\n    if (!listEl) return;\n\n    if (results.length === 0) {\n      listEl.innerHTML = '<div class=\"no-results\">No results found</div>';\n      return;\n    }\n\n    listEl.innerHTML = results.map(place => `\n      <div class=\"result-card\">\n        <h3>${place.name}</h3>\n        <p>${place.address || ''}</p>\n        ${place.rating ? `<div class=\"rating\">⭐ ${place.rating}</div>` : ''}\n      </div>\n    `).join('');\n  }\n\n  private showWeatherInfo(weather: any): void {\n    // TODO: Display weather information\n    console.log('Weather info:', weather);\n  }\n\n  private initializeTripPlanning(): void {\n    // TODO: Initialize trip planning view\n  }\n\n  private initializeAIInterface(): void {\n    // TODO: Initialize AI interface\n  }\n\n  private initializeVoiceInterface(): void {\n    // TODO: Initialize voice interface\n  }\n}","import { themeProvider } from './theme/ThemeProvider';\nimport { updateManager } from './update/UpdateManager';\nimport { createGoogleProviders } from '../providers/google/maps';\nimport { createOpenWeatherProvider } from '../providers/weather/openweather';\nimport { createOSRMProvider } from '../providers/routing/osrm';\nimport { createWeatherAwareRouter } from '../features/routing/WeatherAwareRouter';\nimport { createAIOrchestrator } from './ai/AIOrchestrator';\nimport { planningManager } from '../features/planning/PlanningManager';\nimport { voiceManager } from '../features/voice/VoiceManager';\nimport { navigationManager } from '../features/navigation/NavigationManager';\nimport { MapManager } from '../features/map/MapManager';\nimport { UIManager } from '../features/ui/UIManager';\nimport { telemetry } from '../lib/telemetry';\n\ninterface AppConfig {\n  googleMapsApiKey?: string;\n  openWeatherApiKey?: string;\n  routingProvider: 'google' | 'osrm';\n  weatherProvider: 'openweather';\n}\n\nclass TravelingApp {\n  private config: AppConfig;\n  private providers: any = {};\n  private managers: any = {};\n  private aiOrchestrator: any;\n  private isInitialized = false;\n\n  constructor() {\n    this.config = {\n      googleMapsApiKey: import.meta.env.VITE_GOOGLE_MAPS_API_KEY,\n      openWeatherApiKey: import.meta.env.VITE_OPENWEATHER_API_KEY,\n      routingProvider: (import.meta.env.VITE_ROUTING_PROVIDER as 'google' | 'osrm') || 'google',\n      weatherProvider: 'openweather'\n    };\n  }\n\n  async initialize(): Promise<void> {\n    if (this.isInitialized) return;\n\n    telemetry.track('app_initialization_started');\n    \n    try {\n      // Initialize core systems\n      await this.initializeTheme();\n      await this.initializeProviders();\n      await this.initializeManagers();\n      await this.initializeUI();\n      await this.setupEventHandlers();\n      \n      this.isInitialized = true;\n      telemetry.track('app_initialization_completed');\n      \n      // Check for updates after initialization\n      setTimeout(() => updateManager.checkForUpdates(), 2000);\n      \n    } catch (error) {\n      telemetry.track('app_initialization_failed', {\n        error: error instanceof Error ? error.message : 'Unknown error'\n      });\n      throw error;\n    }\n  }\n\n  private async initializeTheme(): Promise<void> {\n    // Theme provider auto-initializes, just ensure it's ready\n    const theme = themeProvider.getEffectiveTheme();\n    telemetry.track('theme_initialized', { theme });\n  }\n\n  private async initializeProviders(): Promise<void> {\n    // Google Maps providers\n    if (this.config.googleMapsApiKey) {\n      const googleProviders = createGoogleProviders(this.config.googleMapsApiKey);\n      this.providers.googlePlaces = googleProviders.places;\n      this.providers.googleRouting = googleProviders.routing;\n    }\n\n    // Routing provider\n    if (this.config.routingProvider === 'google' && this.providers.googleRouting) {\n      this.providers.routing = this.providers.googleRouting;\n    } else {\n      this.providers.routing = createOSRMProvider();\n    }\n\n    // Weather provider\n    if (this.config.openWeatherApiKey) {\n      this.providers.weather = createOpenWeatherProvider(this.config.openWeatherApiKey);\n    }\n\n    // Weather-aware routing\n    if (this.providers.routing && this.providers.weather) {\n      this.providers.weatherAwareRouter = createWeatherAwareRouter(\n        this.providers.routing,\n        this.providers.weather\n      );\n    }\n\n    // Places provider fallback\n    this.providers.places = this.providers.googlePlaces || {\n      search: async () => [],\n      details: async () => ({}),\n      photos: async () => []\n    };\n\n    telemetry.track('providers_initialized', {\n      routing: this.config.routingProvider,\n      weather: this.config.weatherProvider,\n      places: this.providers.googlePlaces ? 'google' : 'fallback'\n    });\n  }\n\n  private async initializeManagers(): Promise<void> {\n    // AI Orchestrator\n    if (this.providers.places && this.providers.routing && this.providers.weather) {\n      this.aiOrchestrator = createAIOrchestrator(\n        this.providers.places,\n        this.providers.routing,\n        this.providers.weather\n      );\n    }\n\n    // Map Manager\n    this.managers.map = new MapManager({\n      providers: this.providers\n    });\n\n    // UI Manager\n    this.managers.ui = new UIManager({\n      planningManager,\n      voiceManager,\n      navigationManager,\n      aiOrchestrator: this.aiOrchestrator,\n      providers: this.providers\n    });\n\n    telemetry.track('managers_initialized');\n  }\n\n  private async initializeUI(): Promise<void> {\n    await this.managers.ui.initialize();\n    await this.managers.map.initialize();\n    \n    telemetry.track('ui_initialized');\n  }\n\n  private async setupEventHandlers(): Promise<void> {\n    // Theme change handler\n    themeProvider.on('theme-changed', (data) => {\n      this.managers.map?.updateTheme(data.theme);\n      telemetry.track('theme_changed', { theme: data.theme });\n    });\n\n    // Update notifications\n    updateManager.on('update-available', (updateInfo) => {\n      this.managers.ui?.showUpdateNotification(updateInfo);\n      telemetry.track('update_notification_shown', updateInfo);\n    });\n\n    // Voice intent handling\n    voiceManager.on('intent-recognized', async (intent) => {\n      if (this.aiOrchestrator) {\n        try {\n          const result = await this.aiOrchestrator.processVoiceIntent(intent, {\n            location: this.managers.map?.getCurrentLocation(),\n            userPreferences: await this.getUserPreferences()\n          });\n          \n          this.managers.ui?.handleAIResult(intent.type, result);\n        } catch (error) {\n          console.error('Voice intent processing failed:', error);\n          this.managers.ui?.showError('Failed to process voice command');\n        }\n      }\n    });\n\n    // Navigation events\n    navigationManager.on('navigation-started', () => {\n      this.managers.ui?.enterNavigationMode();\n    });\n\n    navigationManager.on('navigation-stopped', () => {\n      this.managers.ui?.exitNavigationMode();\n    });\n\n    // Global error handling\n    window.addEventListener('error', (event) => {\n      this.managers.ui?.showError('An unexpected error occurred');\n    });\n\n    telemetry.track('event_handlers_setup');\n  }\n\n  private async getUserPreferences(): Promise<Record<string, any>> {\n    // Load user preferences from storage\n    return {\n      language: navigator.language,\n      units: 'metric',\n      categories: ['meal', 'scenic', 'activity']\n    };\n  }\n\n  // Public API\n  getProviders() {\n    return this.providers;\n  }\n\n  getManagers() {\n    return this.managers;\n  }\n\n  getAIOrchestrator() {\n    return this.aiOrchestrator;\n  }\n\n  isReady(): boolean {\n    return this.isInitialized;\n  }\n}\n\n// Global app instance\nconst app = new TravelingApp();\n\n// Export initialization function\nexport async function initializeApp(): Promise<void> {\n  await app.initialize();\n}\n\n// Export app instance for debugging\nif (import.meta.env.DEV) {\n  (window as any).__travelingApp = app;\n}\n\nexport { app };"],"names":["lightTheme","darkTheme","createCustomEvent","name","detail","EventBus","__publicField","event","callback","eventListeners","data","error","wrapper","args","ThemeProvider","saved","theme","current","effective","colors","root","key","value","themeColorMeta","vars","themeProvider","UpdateManager","config","force","now","telemetry","response","latestVersion","updateInfo","latest","available","latestParts","currentParts","i","latestPart","currentPart","_a","_b","registration","userAgent","updateManager","OSRMProvider","input","startTime","profile","coordString","coord","url","AppError","route","mode","osrmRoute","leg","_d","_c","_f","_e","_h","_g","step","coordinates","lngs","lats","createOSRMProvider","baseUrl","WeatherAwareRouter","routingProvider","weatherProvider","origin","destination","options","basicRoute","weatherAnalysis","weatherScore","recommendation","alternativeRoutes","result","cacheKey","cached","weatherPromises","point","checkpoints","midpoint","weather","weatherData","avgWeather","precipitation","temperature","visibility","wind","overall","count","sum","w","windSpeed","threshold","alerts","avgTemp","originalRoute","alternatives","maxAlternatives","alternativeOptions","altOptions","altRoute","a","b","route1","route2","distanceDiff","durationDiff","start","end","ratio","departureTime","forecastData","departureHour","relevantForecast","createWeatherAwareRouter","PlannerAgent","placesProvider","destinationPlaces","weatherContext","candidates","recommendations","plan","categories","category","categoryPlaces","places","place","scores","weightedScore","rating","distance","isIndoor","type","isOutdoor","currentWeather","priceLevel","budget","estimatedCost","reasons","maxStops","selectedStops","rec","index","highRatedCount","r","avgScore","hasHighQuality","from","to","φ1","φ2","Δφ","Δλ","AIOrchestrator","params","tool","intent","context","constraints","query","location","createAIOrchestrator","LocalStorageAdapter","item","IndexedDBAdapter","resolve","reject","request","db","MemoryAdapter","StorageManager","defaultValue","items","keys","acc","ttlMs","expiry","storage","PlanningManager","description","startDate","endDate","planId","updates","updatedPlan","validation","stop","stopId","stopIndex","s","updatedStop","fromIndex","toIndex","movedStop","errors","warnings","stopPrefix","actualDuration","expectedDuration","nextStop","maxDuration","totalDays","currentPlanId","plans","planningManager","WebSpeechSTTProvider","eventBus","SpeechRecognition","results","transcript","confidence","SimpleLinguisticParser","normalizedTranscript","intentType","patterns","pattern","match","captured","VoiceManager","text","utterance","command","voiceManager","NavigationManager","startFromStep","position","currentLeg","currentStep","remainingDistance","averageSpeedMs","nextStepIndex","nextStep","instruction","meters","feet","miles","km","upcoming","stepIndex","legIndex","newSettings","navigationManager","MapManager","L.layerGroup","mapContainer","L.map","layer","L.TileLayer","L.tileLayer","center","zoom","marker","L.marker","polyline","L.polyline","firstLeg","lastLeg","accuracy","L.divIcon","L.circle","placeId","encoded","poly","len","lat","lng","shift","dlat","dlng","UIManager","navItems","views","targetView","nav","view","targetElement","voiceBtn","isHolding","startListening","stopListening","e","btn","budgetSlider","budgetAmount","generateBtn","statusEl","duration","interests","groupType","groupSize","searchBtn","searchInput","performSearch","card","preset","container","themeToggle","message","notification","selected","el","display","listEl","TravelingApp","googleProviders","createGoogleProviders","createOpenWeatherProvider","app","initializeApp"],"mappings":"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"}