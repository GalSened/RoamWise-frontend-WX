System.register(["./maps-legacy-DLWhc_uQ.js"],function(e,t){"use strict";var r,n;return{setters:[e=>{r=e.A,n=e.t}],execute:function(){e("c",function(e){return new t({apiKey:e})});class t{config;baseUrl="https://api.openweathermap.org/data/3.0";constructor(e){this.config={units:"metric",language:"en",...e}}async getCurrent(e,t){const a=performance.now();try{const s=new URL(`${this.baseUrl}/onecall`);s.searchParams.set("lat",e.toString()),s.searchParams.set("lon",t.toString()),s.searchParams.set("appid",this.config.apiKey),s.searchParams.set("units",this.config.units),s.searchParams.set("lang",this.config.language),s.searchParams.set("exclude","minutely,hourly,daily,alerts");const i=await fetch(s.toString());if(!i.ok)throw new r(`Weather API error: ${i.status}`,"WEATHER_API_ERROR",i.status);const o=await i.json(),c=this.transformCurrentWeather(o);return n.track("weather_current",{lat:e,lng:t,duration:performance.now()-a,condition:c.condition}),c}catch(s){throw n.track("weather_current_error",{lat:e,lng:t,error:s instanceof Error?s.message:"Unknown error",duration:performance.now()-a}),s}}async getForecast(e,t,a){const s=performance.now();try{const a=new URL(`${this.baseUrl}/onecall`);a.searchParams.set("lat",e.toString()),a.searchParams.set("lon",t.toString()),a.searchParams.set("appid",this.config.apiKey),a.searchParams.set("units",this.config.units),a.searchParams.set("lang",this.config.language),a.searchParams.set("exclude","minutely,alerts");const i=await fetch(a.toString());if(!i.ok)throw new r(`Weather API error: ${i.status}`,"WEATHER_API_ERROR",i.status);const o=await i.json(),c=this.transformForecast(o);return n.track("weather_forecast",{lat:e,lng:t,duration:performance.now()-s,hourly_count:c.hourly.length,daily_count:c.daily.length}),c}catch(i){throw n.track("weather_forecast_error",{lat:e,lng:t,error:i instanceof Error?i.message:"Unknown error",duration:performance.now()-s}),i}}transformCurrentWeather(e){const t=e.current,r=t.weather[0],n=new Date,a=new Date(1e3*t.sunrise),s=new Date(1e3*t.sunset);return{temperature:t.temp,feelsLike:t.feels_like,humidity:t.humidity,pressure:t.pressure,visibility:t.visibility/1e3,windSpeed:t.wind_speed,windDirection:t.wind_deg,precipitation:0,cloudCover:t.clouds.all,uvIndex:t.uvi,condition:r.description,icon:this.transformIcon(r.icon),isDaylight:n>=a&&n<=s}}transformForecast(e){return{hourly:(e.hourly||[]).map(e=>({time:new Date(1e3*e.dt),temperature:e.temp,precipitation:100*e.pop,windSpeed:e.wind_speed,condition:e.weather[0]?.description||"",icon:this.transformIcon(e.weather[0]?.icon||"")})),daily:(e.daily||[]).map(e=>({date:new Date(1e3*e.dt),temperatureMax:e.temp.max,temperatureMin:e.temp.min,precipitation:0,precipitationProbability:100*e.pop,windSpeed:e.wind_speed,condition:e.weather[0]?.description||"",icon:this.transformIcon(e.weather[0]?.icon||""),sunrise:new Date(1e3*e.sunrise),sunset:new Date(1e3*e.sunset)}))}}transformIcon(e){return{"01d":"☀️","01n":"🌙","02d":"⛅","02n":"☁️","03d":"☁️","03n":"☁️","04d":"☁️","04n":"☁️","09d":"🌧️","09n":"🌧️","10d":"🌦️","10n":"🌧️","11d":"⛈️","11n":"⛈️","13d":"🌨️","13n":"🌨️","50d":"🌫️","50n":"🌫️"}[e]||"🌤️"}}}}});
//# sourceMappingURL=weather-legacy-BrAF-H-8.js.map
